{"version":3,"sources":["./src/app/self-player/self-player.component.ts","./src/app/self-player/self-player.component.html","./src/app/modal-card-collection/modal-card-collection.component.ts","./src/app/modal-card-collection/modal-card-collection.component.html","./src/app/chat-box/chat-box.component.ts","./src/app/chat-box/chat-box.component.html","./src/app/card-action-mode.service.ts","./src/environments/environment.ts","./src/app/domain/game-field.ts","./src/app/card-collection/card-collection.component.ts","./src/app/card-collection/card-collection.component.html","./src/app/modal-card-collection.service.ts","./src/app/is-safe-url.pipe.ts","./src/app/domain/distributed-database.ts","./src/app/other-player/other-player.component.ts","./src/app/other-player/other-player.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/game-field-store.service.ts","./src/app/card-details/card-details.component.ts","./src/app/card-details/card-details.component.html","./src/app/hovered-card.service.ts","./src/app/card/card.component.ts","./src/app/card/card.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwF;AACzD;;;;;;;ICW3B,oFAAsJ;;;IAArG,oFAAyB;;ADAvE,MAAM,mBAAmB;IAI9B,YACY,KAA4B,EAC5B,GAAsB,EACtB,GAA+B;QAF/B,UAAK,GAAL,KAAK,CAAuB;QAC5B,QAAG,GAAH,GAAG,CAAmB;QACtB,QAAG,GAAH,GAAG,CAA4B;QALnC,YAAO,GAAG,IAAI,4CAAO,EAAE,CAAC;QAM9B,KAAK,CAAC,SAAS,CACb,CAAC,CAAY,EAAE,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,kBAAkB,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC,EACvE,IAAI,CAAC,OAAO,CAAC,CAAC;IAClB,CAAC;IAED,QAAQ;IACR,CAAC;IAED,WAAW;QACT,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IACtB,CAAC;IAED,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC;IAC1C,CAAC;IAED,IAAI,EAAE;QACJ,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC;IACxC,CAAC;IAED,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;IAC9B,CAAC;IAED,WAAW;QACT,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC;IAClD,CAAC;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC;IAC3C,CAAC;IAED,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC;IAC1C,CAAC;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC;IAC3C,CAAC;IAED,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC;IAC/C,CAAC;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC;IAC3C,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;IACzC,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;IACzC,CAAC;IAED,aAAa;QACX,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC;IACvC,CAAC;IAED,aAAa;QACX,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC;IACvC,CAAC;IAED,iBAAiB;QACf,IAAI,KAAK,GAAG,MAAM,CAAC,yBAAyB,CAAC,CAAC;QAC9C,IAAI,KAAK,EAAE;YACT,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;SACtE;IACH,CAAC;IAED,iBAAiB;QACf,IAAI,KAAK,GAAG,MAAM,CAAC,2BAA2B,CAAC,CAAC;QAChD,IAAI,KAAK,EAAE;YACT,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,eAAe,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;SACrE;IACH,CAAC;IAED,eAAe;QACb,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,iBAAiB,KAAK,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC;IACrF,CAAC;IAED,WAAW;QACT,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,gBAAgB,CAAC,uBAAuB,CAAC,CAAC;QAChE,IAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,EAAE;YAC1C,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,gBAAgB,CAAC,yBAAyB,CAAC;YACjE,MAAM,CAAC,WAAW,EAAE,CAAC;QACvB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,EAAE,YAAY,EAAE,aAAa,CAAC,CAAC;IAC5E,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,cAAc,EAAE,CAAC;IACzC,CAAC;IAED,WAAW;QACT,IAAI,QAAQ,GAAG,YAAY,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;QACrD,IAAI,IAAI,GAAG,MAAM,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;QAC3D,IAAI,IAAI,EAAE;YACR,YAAY,CAAC,OAAO,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;YAC5C,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;SACzC;IACH,CAAC;;sFA9GU,mBAAmB;mGAAnB,mBAAmB;QCZhC,8EACA;QAAA,yEAAyC;QAAA,oEAAG;QAAA,uDAAQ;QAAA,4DAAI;QAAC,uDAAY;QAAA,4DAAS;QAC1E,oFAAyG;QACzG,oFAA2H;QAC3H,4EAAkC;QAA1B,2IAAS,cAAe,IAAC;QAAC,0EAAe;QAAA,4DAAS;QAC1D,sEAAK;QAAA,wDACD;QAAA,6EAAkC;QAA1B,4IAAS,cAAe,IAAC;QAAC,wEAAY;QAAA,4DAAS;QACvD,6EAAqC;QAA7B,4IAAS,iBAAkB,IAAC;QAAC,kFAAiB;QAAA,4DAAS;QAC/D,6EAAwC;QAAhC,4IAAS,oBAAqB,IAAC;QAAC,8EAAkB;QAAA,4DAAS;QACnE,6EAAqC;QAA7B,4IAAS,iBAAkB,IAAC;QAAC,2EAAe;QAAA,4DAAS;QACjE,4DAAM;QACN,qFAAqI;QACrI,iJAAsJ;QACtJ,uEAAK;QAAA,wDACD;QAAA,6EAAuC;QAA/B,4IAAS,mBAAoB,IAAC;QAAC,6DAAC;QAAA,4DAAS;QACjD,6EAAuC;QAA/B,4IAAS,mBAAoB,IAAC;QAAC,6DAAC;QAAA,4DAAS;QACjD,6EAA2C;QAAnC,4IAAS,uBAAwB,IAAC;QAAC,kEAAM;QAAA,4DAAS;QAC1D,6EAA2C;QAAnC,4IAAS,uBAAwB,IAAC;QAAC,kEAAM;QAAA,4DAAS;QAC9D,4DAAM;QACV,4DAAW;;QAnBD,iFAAW;QACb,0DAAgC;QAAhC,wFAAgC;QAAI,0DAAQ;QAAR,yEAAQ;QAAK,0DAAY;QAAZ,uFAAY;QAC5C,0DAAwB;QAAxB,gFAAwB;QACxB,0DAAyB;QAAzB,iFAAyB;QAEzC,0DACD;QADC,gHACD;QAKiB,0DAA6B;QAA7B,qFAA6B;QAC5B,0DAAyB;QAAzB,oFAAyB;QAC1C,0DACD;QADC,kGACD;;6FDFK,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,8BAA8B,CAAC;aAC5C;;;;;;;;;;;;;;AEXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+E;;;;;;;ICA/E,yEACI;IAAA,yEACI;IAAA,4EAA8B;IAAtB,2TAAqB;IAAC,yEAAS;IAAA,4DAAS;IAChD,oFAAsI;IAC1I,4DAAM;IACV,4DAAM;;;IAFuB,0DAA0B;IAA1B,qFAA0B;;ADOhD,MAAM,4BAA4B;IAEvC,YAAmB,OAAmC;QAAnC,YAAO,GAAP,OAAO,CAA4B;QACpD,OAAO;IACT,CAAC;IAED,QAAQ;IACR,CAAC;IAED,IAAI;QACF,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,KAAK,CAAC;QAC7B,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;IAC7B,CAAC;;wGAZU,4BAA4B;4GAA5B,4BAA4B;QCVzC,wHAKM;;QALA,qFAA0B;;6FDUnB,4BAA4B;cALxC,uDAAS;eAAC;gBACT,QAAQ,EAAE,2BAA2B;gBACrC,WAAW,EAAE,wCAAwC;gBACrD,SAAS,EAAE,CAAC,wCAAwC,CAAC;aACtD;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsG;AACvE;;;;;ICIvB,wEACI;IAAA,uEAA8B;IAAA,uDAAQ;IAAA,4DAAO;IACjD,qEAAe;;;IADL,0DAAuB;IAAvB,8EAAuB;IAAC,0DAAQ;IAAR,wEAAQ;;;IAE1C,wEACI;IAAA,uEAA8B;IAAA,uDAAU;IAAA,4DAAO;IAAA,uDACnD;IAAA,qEAAe;;;IADL,0DAAuB;IAAvB,8EAAuB;IAAC,0DAAU;IAAV,mFAAU;IAAO,0DACnD;IADmD,kFACnD;;;IANJ,sEACI;IAAA,oIAEe;IACf,oIAEe;IACnB,4DAAM;;;IANa,0DAAiB;IAAjB,gFAAiB;IAGjB,0DAAiB;IAAjB,gFAAiB;;ADEjC,MAAM,gBAAgB;IAM3B,YAAoB,KAA4B,EAAU,GAAsB;QAA5D,UAAK,GAAL,KAAK,CAAuB;QAAU,QAAG,GAAH,GAAG,CAAmB;QAJzE,aAAQ,GAAc,EAAE,CAAC;QAExB,YAAO,GAAG,IAAI,4CAAO,EAAE,CAAC;QAG9B,KAAK,CAAC,SAAS,CACb,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,sBAAsB,CAAC,CAAC,EAAa,EAAE,GAAQ,EAAE,EAAE,CAAC,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC,EAC1F,IAAI,CAAC,OAAO,CAAC,CAAC;IAClB,CAAC;IAED,QAAQ;IACR,CAAC;IAED,WAAW;QACT,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IACtB,CAAC;IAED,kBAAkB,CAAC,GAAY;QAC7B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACxB,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;QACzB,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,cAAc;QACZ,IAAI,IAAI,GAAG,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;QAC9C,IAAI,IAAI,EAAE;YACR,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC;SACpC;IACH,CAAC;IAEH,WAAW;QACL,IAAI,OAAO,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC;QAClC,IAAI,OAAO,EAAE;YACX,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;SAC3C;IACL,CAAC;;gFArCU,gBAAgB;gGAAhB,gBAAgB;QCV7B,2EACA;QAAA,yEAAQ;QAAA,+DAAI;QAAA,4DAAS;QACrB,4EAAqC;QAA7B,wIAAS,iBAAkB,IAAC;QAAC,wEAAa;QAAA,4DAAS;QAC3D,yEACI;QAAA,4GAOM;QACV,4DAAM;QACN,4DAAW;;QATY,0DAAW;QAAX,iFAAW;;6FDMrB,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAA2C;AACZ;AACY;;AAKpC,MAAM,qBAAqB;IAIhC;QAHQ,gBAAW,GAAuB,SAAS,CAAC;QAC5C,YAAO,GAAG,IAAI,4CAAO,EAAE,CAAC;IAEhB,CAAC;IAEjB,eAAe,CAAC,MAAc;QAC5B,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC;QAC1B,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IACtB,CAAC;IACD,UAAU;QACR,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;QAC7B,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IACtB,CAAC;IACD,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,WAAqB,CAAC;IACpC,CAAC;IACD,IAAI,YAAY;QACd,OAAO,OAAO,IAAI,CAAC,WAAW,KAAK,WAAW,CAAC;IACjD,CAAC;IACD,SAAS,CAAC,OAAmB,EAAE,OAAyB;QACtD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,gEAAS,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;IAC3D,CAAC;;0FAtBU,qBAAqB;wGAArB,qBAAqB,WAArB,qBAAqB,mBAFpB,MAAM;6FAEP,qBAAqB;cAHjC,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACND;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+B;AACY;AACwB;AAEnE,MAAM,QAAQ;IAKV,YAAmB,IAAY,EAAE,GAAuB,EAAE,KAAe;QAAtD,SAAI,GAAJ,IAAI,CAAQ;QAC7B,IAAI,KAAK,EAAE;YACT,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;SACnB;aAAM;YACL,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;SACpB;QACD,IAAI,GAAG,EAAE;YACP,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;SAChB;aAAM;YACL,IAAI,CAAC,GAAG,GAAG,4BAA4B,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;SACnG;IACH,CAAC;IAEO,SAAS,CAAC,KAAa;QAC7B,OAAO,6IAA6I,GAAG,KAAK,GAAG,eAAe,CAAC;IACjL,CAAC;IAED,KAAK;QACH,OAAO;YACL,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,GAAG,EAAE,IAAI,CAAC,GAAG;SACd,CAAC;IACJ,CAAC;CACF;AAED,SAAS,eAAe,CAAC,GAAQ;IAC/B,OAAO,IAAI,QAAQ,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;AACzC,CAAC;AAED,IAAI,OAAO,GAAG,CAAC,CAAC;AAEhB,IAAK,SAIJ;AAJD,WAAK,SAAS;IACZ,6CAAM;IACN,+CAAO;IACP,6CAAM;AACR,CAAC,EAJI,SAAS,KAAT,SAAS,QAIb;AAED,MAAM,IAAI;IAQR,YAAY,IAAc,EAAE,YAAoB,EAAE,EAAW,EAAE,MAAgB,EAAE,IAAa,EAAE,OAAgB;QAJzG,UAAK,GAAc,SAAS,CAAC,MAAM,CAAC;QAKzC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,IAAI,OAAO,EAAE,KAAK,WAAW,EAAE;YAC7B,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,KAAK,CAAC,GAAG,IAAI,GAAG,OAAO,EAAE,CAAC;SAChE;aAAM;YACL,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;SACd;QACD,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;YACjC,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC,MAAM,CAAC;SAC/B;aAAM;YACL,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC;SAC3D;QACD,IAAI,OAAO,IAAI,KAAK,WAAW,EAAE;YAC/B,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;SAChB;aAAM;YACL,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;SAClB;QACD,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACzB,CAAC;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,KAAK,KAAK,SAAS,CAAC,MAAM,CAAC;IACzC,CAAC;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,KAAK,KAAK,SAAS,CAAC,MAAM,CAAC;IACzC,CAAC;IAED,IAAI,eAAe;QACjB,OAAO,IAAI,CAAC,KAAK,KAAK,SAAS,CAAC,OAAO,CAAC;IAC1C,CAAC;IAED,GAAG;QACD,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC,MAAM,CAAC;IAChC,CAAC;IAED,aAAa;QACX,IAAI,IAAI,CAAC,KAAK,KAAK,SAAS,CAAC,MAAM,EAAE;YACnC,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC,OAAO,CAAC;SAChC;IACH,CAAC;IAED,KAAK;QACH,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC,MAAM,CAAC;IAChC,CAAC;IAED,UAAU,CAAC,CAAO;QAChB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;IACjB,CAAC;IAED,YAAY,CAAC,MAAc;QACzB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACzC,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,MAAM,EAAE;gBAC9B,OAAO,IAAI,CAAC;aACb;SACF;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IAED,cAAc,CAAC,MAAc;QAC3B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACzC,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,MAAM,EAAE;gBAC9B,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACxB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBACvB,OAAO,IAAI,CAAC;aACb;SACF;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;IACxB,CAAC;IAED,IAAI,GAAG;QACL,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;IACvB,CAAC;IAED,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;IAC9B,CAAC;IAED,IAAI,iBAAiB;QACnB,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,OAAO,EAAE,CAAC;IACrC,CAAC;IAED,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;IAED,KAAK;QACH,OAAO;YACL,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,IAAI,EAAE,IAAI,CAAC,YAAY;YACvB,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACvB,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;YACnC,OAAO,EAAE,IAAI,CAAC,OAAO;SACtB;IACH,CAAC;CACF;AAeD,SAAS,WAAW,CAAC,GAAY;IAC/B,OAAO,IAAI,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;AACnH,CAAC;AAEM,MAAe,cAAc;IAClC,YAAmB,KAAa;QAAb,UAAK,GAAL,KAAK,CAAQ;IAChC,CAAC;IAED,CAAC,MAAM,CAAC,QAAQ,CAAC;QACf,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC;IACvC,CAAC;IAID,QAAQ,CAAC,MAAc;QACrB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC1C,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,MAAM,EAAE;gBAC/B,OAAO,IAAI,CAAC;aACb;SACF;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IAED,OAAO,CAAC,MAAc;QACpB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC1C,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,MAAM,EAAE;gBAC/B,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;aACtB;SACF;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,MAAM,CAAC,MAAc;QACnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC1C,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,MAAM,EAAE;gBAC/B,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACzB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBACxB,OAAO,IAAI,CAAC;aACb;SACF;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;IAC3B,CAAC;IAED,KAAK;QACH,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;IACxC,CAAC;CACF;AAEM,MAAM,SAAU,SAAQ,cAAc;IAC3C,YAAY,KAAa;QACvB,KAAK,CAAC,KAAK,CAAC,CAAC;IACf,CAAC;IAED,GAAG,CAAC,IAAU;QACZ,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IAED,OAAO;QACL,IAAI,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;QACrC,IAAI,cAAc,CAAC;QACnB,IAAI,WAAW,CAAC;QAEhB,4CAA4C;QAC5C,OAAO,CAAC,KAAK,YAAY,EAAE;YAEzB,8BAA8B;YAC9B,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,YAAY,CAAC,CAAC;YACvD,YAAY,IAAI,CAAC,CAAC;YAElB,wCAAwC;YACxC,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;YAC1C,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;YACnD,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,cAAc,CAAC;SAC1C;IACH,CAAC;IAED,IAAI;QACF,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;IAC5B,CAAC;CACF;AAEM,MAAM,OAAQ,SAAQ,cAAc;IACzC,YAAY,KAAa;QACvB,KAAK,CAAC,KAAK,CAAC,CAAC;IACf,CAAC;IAED,GAAG,CAAC,IAAU;QACZ,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACpE,IAAI,GAAG,GAAG,CAAC,EAAE;YACX,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACvB;aAAM;YACL,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;SACjC;IACH,CAAC;CAEF;AAED,MAAM,UAAU;IAcd,YAAY,EAAU,EAAE,IAAY,EAAE,IAAY,EAAE,EAA6B;QAF9D,YAAO,GAAkB,IAAI,4CAAO,EAAE,CAAC;QAGxD,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,OAAO,GAAG,IAAI,SAAS,CAAC,IAAI,CAAC,CAAC;QACnC,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;QACvB,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,cAAc,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACxD,IAAI,CAAC,IAAI,GAAG,IAAI,OAAO,CAAC,EAAE,CAAC,CAAC;QAC5B,IAAI,CAAC,KAAK,GAAG,IAAI,OAAO,CAAC,EAAE,CAAC,CAAC;QAC7B,IAAI,CAAC,SAAS,GAAG,IAAI,SAAS,CAAC,EAAE,CAAC,CAAC;QACnC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,YAAY,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC,CAAC;QAC3D,IAAI,CAAC,KAAK,GAAG,IAAI,OAAO,CAAC,EAAE,CAAC,CAAC;QAC7B,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC;QACnD,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QAC1C,IAAI,CAAC,KAAK,GAAG,MAAM,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,WAAW,CAAC;QACzE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;QAEjC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,gBAAgB,EAAE,gBAAgB,EAAE,CAAC,OAAgB,EAAE,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAChH,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,gBAAgB,EAAE,YAAY,EAAE,CAAC,CAAM,EAAE,EAAE,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAChH,CAAC;IAED,kBAAkB,CAAC,IAAgB;QACjC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;IAED,WAAW,CAAC,EAAU,EAAE,EAAU;QAC9B,OAAO;YACH,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,EAAE,EAAE,EAAE;YACN,EAAE,EAAE,EAAE;SACT;IACL,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;YAC3B,IAAI,CAAC,CAAC,CAAC,MAAM,EAAE;gBACb,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;aAClB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ,CAAC,MAA2B;QAClC,IAAI,CAAC,CAAC;QACN,IAAI,MAAM,EAAE;YACV,IAAI,IAAI,GAAG,IAAI,CAAC,uBAAuB,CAAC,MAAM,CAAC,CAAC;YAChD,CAAC,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;SAC7C;aAAM;YACL,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;SACzB;QACD,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,cAAc,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACxD,IAAI,CAAC,CAAC,EAAE;YACN,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,CAAC;YAC3C,OAAO;SACR;QACD,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;QAClB,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,CAAC;QAC1C,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IACtB,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,gBAAgB,CAAC,uBAAuB,CAAC,CAAC;QAC/C,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;IACzB,CAAC;IAEO,SAAS,CAAC,CAAO;QACvB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACjB,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACpD,CAAC;IAED,eAAe,CAAC,IAAY;QAC1B,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC;QACnB,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QAC1C,IAAI,IAAI,GAAG,CAAC,EAAE;YACZ,IAAI,CAAC,gBAAgB,CAAC,yBAAyB,GAAG,IAAI,GAAG,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;SAChF;aAAM;YACL,IAAI,CAAC,gBAAgB,CAAC,6BAA6B,GAAG,CAAC,IAAI,GAAG,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;SACrF;QACD,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IACtB,CAAC;IAED,cAAc,CAAC,MAAc;QAC3B,IAAI,IAAI,GAAG,IAAI,CAAC,uBAAuB,CAAC,MAAM,CAAC,CAAC;QAChD,IAAI,IAAI,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QACnD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QAC1B,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IACtB,CAAC;IAEO,cAAc,CAAC,IAAU;QAC/B,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACnB,IAAI,CAAC,gBAAgB,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,GAAG,eAAe,CAAC,CAAC;YAC9D,OAAO;SACR;QACD,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,IAAI,IAAI,CAAC,EAAE,KAAK,IAAI,CAAC,YAAY,EAAE;YACjC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACzB,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,YAAY,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC,CAAC;YAC3D,IAAI,CAAC,gBAAgB,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,GAAG,eAAe,CAAC,CAAC;SAC9D;aAAM;YACL,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,EAAE,gBAAgB,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;SAC1E;IACH,CAAC;IAED,UAAU,CAAC,MAAc;QACvB,IAAI,IAAI,GAAG,IAAI,CAAC,uBAAuB,CAAC,MAAM,CAAC,CAAC;QAChD,IAAI,IAAI,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QACnD,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACnB,IAAI,CAAC,gBAAgB,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,GAAG,eAAe,CAAC,CAAC;YAC9D,OAAO;SACR;QACD,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACrB,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC;QACnD,IAAI,CAAC,gBAAgB,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,GAAG,qBAAqB,CAAC,CAAC;QACpE,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IACtB,CAAC;IAED,WAAW,CAAC,MAAc;QACxB,IAAI,IAAI,GAAG,IAAI,CAAC,uBAAuB,CAAC,MAAM,CAAC,CAAC;QAChD,IAAI,IAAI,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QACnD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QACtB,IAAI,CAAC,gBAAgB,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,CAAC;QACtD,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IACtB,CAAC;IAED,iBAAiB,CAAC,MAAc;QAC9B,IAAI,QAAQ,GAAG,IAAI,CAAC,uBAAuB,CAAC,MAAM,CAAC,CAAC;QACpD,IAAI,IAAI,GAAG,IAAI,CAAC,oBAAoB,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QACvD,IAAI,CAAC,GAAG,EAAE,CAAC;QACX,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QACtB,IAAI,CAAC,gBAAgB,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,GAAG,cAAc,CAAC,CAAC;QAC9D,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IACtB,CAAC;IAED,SAAS,CAAC,MAAc;QACtB,IAAI,IAAI,GAAG,IAAI,CAAC,uBAAuB,CAAC,MAAM,CAAC,CAAC;QAChD,IAAI,IAAI,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QACnD,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QACrB,IAAI,CAAC,gBAAgB,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,GAAG,eAAe,CAAC,CAAC;QAC9D,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IACtB,CAAC;IAED,YAAY,CAAC,MAAc;QACzB,IAAI,IAAI,GAAG,IAAI,CAAC,uBAAuB,CAAC,MAAM,CAAC,CAAC;QAChD,IAAI,IAAI,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QACnD,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACvB,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,cAAc,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACxD,IAAI,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,SAAS,EAAE;YACnB,IAAI,CAAC,gBAAgB,CAAC,yCAAyC,CAAC,CAAC;SAClE;aAAM;YACL,IAAI,CAAC,gBAAgB,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,GAAG,0BAA0B,CAAC,CAAC;SACzE;QACD,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IACtB,CAAC;IAED,aAAa,CAAC,cAAsB,EAAE,cAAsB;QAC1D,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;QAClD,IAAI,CAAC,QAAQ,EAAE;YACb,OAAO;SACR;QAED,IAAI,QAAQ,GAAG,IAAI,CAAC,uBAAuB,CAAC,cAAc,CAAC,CAAC;QAC5D,IAAI,IAAI,GAAG,IAAI,CAAC,oBAAoB,CAAC,QAAQ,EAAE,cAAc,CAAC,CAAC;QAC/D,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;IACzC,CAAC;IAED,UAAU,CAAC,MAAc,EAAE,KAAyB;QAClD,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACtC,IAAI,CAAC,IAAI,EAAE;YACT,OAAO;SACR;QACD,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC;QACnD,IAAI,CAAC,gBAAgB,CAAC,oBAAoB,GAAG,IAAI,CAAC,IAAI,GAAG,OAAO,GAAG,KAAK,CAAC,CAAC;QAC1E,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IACtB,CAAC;IAED,sBAAsB,CAAC,cAAsB,EAAE,cAAsB,EAAE,aAAqB;QAC1F,IAAI,QAAQ,GAAG,IAAI,CAAC,uBAAuB,CAAC,cAAc,CAAC,CAAC;QAC5D,IAAI,IAAI,GAAG,IAAI,CAAC,oBAAoB,CAAC,QAAQ,EAAE,cAAc,CAAC,CAAC;QAC/D,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,aAAa,EAAE,YAAY,EAAE,EAAC,GAAG,EAAE,cAAc,EAAE,IAAI,EAAE,IAAI,CAAC,KAAK,EAAE,EAAC,CAAC,CAAC;IAChG,CAAC;IAEO,oBAAoB,CAAC,cAAsB,EAAE,IAAU;QAC7D,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;QAClD,IAAI,CAAC,QAAQ,EAAE;YACb,OAAO;SACR;QAED,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;IACzC,CAAC;IAEO,iBAAiB,CAAC,QAAc,EAAE,IAAU;QAClD,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAC1B,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC;QACnD,IAAI,CAAC,gBAAgB,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,GAAG,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC;QACvE,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IACtB,CAAC;IAEO,oBAAoB,CAAC,QAAa,EAAE,MAAc;QACxD,IAAI,IAAI,CAAC;QACT,IAAI,QAAQ,CAAC,QAAQ,EAAE;YACrB,IAAI,GAAG,QAAQ,CAAC,QAAQ,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;SACjD;aAAM;YACL,IAAI,GAAG,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YACnC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;SAC1B;QACD,IAAI,QAAQ,CAAC,SAAS,EAAE;YACtB,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;SACxD;aAAM;YACL,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE,QAAQ,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC;SAC3D;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAEO,aAAa,CAAC,CAAO;QAC3B,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;QACjD,CAAC,CAAC,cAAc,EAAE,CAAC;IACrB,CAAC;IAED,UAAU,CAAC,IAAU;QACnB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACrB,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC;QACnD,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IACtB,CAAC;IAED,uBAAuB,CAAC,MAAc;QACpC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;YAC9B,OAAO,EAAC,GAAG,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,IAAI,EAAC,CAAC;SAC7D;QACD,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;YAC/B,OAAO,EAAC,GAAG,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,KAAK,EAAC,CAAC;SAC5D;QACD,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;YACnC,OAAO,EAAC,GAAG,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,KAAK,EAAC,CAAC;SACpE;QACD,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;YACjC,OAAO,EAAC,GAAG,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,IAAI,EAAC,CAAC;SACnE;QACD,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;YAC/B,OAAO,EAAC,GAAG,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,KAAK,EAAC,CAAC;SAC5D;QACD,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC;QAClE,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;YACrB,OAAO,EAAC,GAAG,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC,CAAC,EAAC,CAAC;SACjF;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,OAAO,CAAC,MAAc;QACpB,OAAO,IAAI,CAAC,uBAAuB,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC;IACvD,CAAC;IAED,GAAG,CAAC,MAAc;QAChB,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACtC,IAAI,CAAC,IAAI,EAAE;YACT,OAAO;SACR;QACD,IAAI,CAAC,GAAG,EAAE,CAAC;QACX,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC;QACnD,IAAI,CAAC,gBAAgB,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC5C,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IACtB,CAAC;IAED,aAAa,CAAC,MAAc;QAC1B,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACtC,IAAI,CAAC,IAAI,EAAE;YACT,OAAO;SACR;QACD,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC;QACnD,IAAI,CAAC,gBAAgB,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,GAAG,cAAc,CAAC,CAAC;QAChE,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IACtB,CAAC;IAED,KAAK,CAAC,MAAc;QAClB,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACtC,IAAI,CAAC,IAAI,EAAE;YACT,OAAO;SACR;QACD,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC;QACnD,IAAI,CAAC,gBAAgB,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC/C,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IACtB,CAAC;IAED,gBAAgB,CAAC,GAAW;QAC1B,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC;IACzF,CAAC;IAED,WAAW,CAAC,IAAY;QACtB,IAAI,IAAI,GAAG,IAAI,QAAQ,CAAC,IAAI,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;QAC/C,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;QACnC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IACxB,CAAC;CACF;AASM,MAAM,WAAW;IAKtB,YAAmB,EAAU,EAAS,EAA6B;QAAhD,OAAE,GAAF,EAAE,CAAQ;QAAS,OAAE,GAAF,EAAE,CAA2B;QAJ3D,YAAO,GAAkB,IAAI,4CAAO,EAAE,CAAC;QACvC,oBAAe,GAAc,IAAI,SAAS,CAAC,EAAE,CAAC,CAAC;QAC/C,gBAAW,GAAc,IAAI,SAAS,CAAC,EAAE,CAAC,CAAC;QAGjD,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,QAAQ,CAAC,EAAE,YAAY,EAAE,CAAC,QAAgB,EAAE,OAAkB,EAAE,EAAE;YAC9E,IAAI,QAAQ,KAAK,IAAI,CAAC,EAAE,EAAE;gBACxB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;gBACzC,IAAI,CAAC,YAAY,EAAE,CAAC;aACrB;QACH,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,QAAQ,CAAC,EAAE,QAAQ,EAAE,CAAC,QAAgB,EAAE,OAAkB,EAAE,EAAE;YAC1E,IAAI,QAAQ,KAAK,IAAI,CAAC,EAAE,EAAE;gBACxB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;gBACrC,IAAI,CAAC,YAAY,EAAE,CAAC;aACrB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAfkD,CAAC;IAiBpD,IAAI,IAAI;;QACN,aAAO,IAAI,CAAC,UAAU,0CAAE,IAAI,CAAC;IAC/B,CAAC;IAED,IAAI,WAAW;;QACb,aAAO,IAAI,CAAC,UAAU,0CAAE,WAAW,CAAC;IACtC,CAAC;IAED,IAAI,KAAK;;QACP,aAAO,IAAI,CAAC,UAAU,0CAAE,KAAK,CAAC;IAChC,CAAC;IAED,IAAY,UAAU;QACpB,OAAO,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,YAAY,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;IAC5C,CAAC;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;IACvC,CAAC;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;IAC3C,CAAC;IAED,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,cAAc,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;IAC9C,CAAC;IAED,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,eAAe,CAAC;IAC9B,CAAC;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,WAAW,CAAC;IAC1B,CAAC;IAEO,GAAG,CAAC,IAAe;QACzB,OAAO,IAAI,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACtD,CAAC;IAED,YAAY;QACV,OAAO,CAAC,GAAG,CAAC,gBAAgB,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;QACxC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IACtB,CAAC;IAED,kBAAkB,CAAC,IAAgB,EAAE,OAAsB;QACzD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,gEAAS,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;IACxD,CAAC;IAED,OAAO,CAAC,MAAc;QACpB,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;IACrC,CAAC;CAEF;AAQD,MAAM,SAAS;IAKb,YAAY,IAAS,EAAE,KAAa,EAAE,OAAe,EAAE,IAAY;QACjE,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,EAAE,GAAG,IAAI,+EAAyB,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QACrD,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,YAAY,EAAE,CAAC,EAAU,EAAE,IAAS,EAAE,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC;QAClF,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,QAAQ,EAAE,YAAY,EAAE,CAAC,EAAU,EAAE,IAAS,EAAE,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC;QACrF,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,QAAQ,EAAE,OAAO,EAAE,CAAC,EAAU,EAAE,GAAQ,EAAE,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/E,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,QAAQ,EAAE,YAAY,EAAE,CAAC,EAAU,EAAE,KAAU,EAAE,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC;QACtF,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,CAAC,EAAU,EAAE,KAAU,EAAE,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC;QAElF,IAAI,CAAC,MAAM,GAAG,IAAI,UAAU,CAAC,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;QAC5D,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,YAAY,EAAE,KAAK,EAAE;YAC/B,IAAI,EAAE,OAAO;YACb,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK;YACxB,WAAW,EAAE,IAAI,CAAC,MAAM,CAAC,WAAW;SACrC,CAAC,CAAC;IACL,CAAC;IAED,sBAAsB,CAAC,OAAiB;QACpC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC;IAC3C,CAAC;IAED,2BAA2B,CAAC,OAAiB;QAC3C,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,eAAe,EAAE,OAAO,CAAC,CAAC;QAC5C,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,QAAQ,EAAE,eAAe,EAAE,OAAO,CAAC,CAAC;IACnD,CAAC;IAED,oBAAoB,CAAC,EAAU;QAC3B,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;QAC1B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,WAAW,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/C,uBAAuB;IACzB,CAAC;IAED,cAAc,CAAC,IAAS;QACtB,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACtB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;QACtD,uBAAuB;IACzB,CAAC;IAED,IAAI,iBAAiB;QACnB,OAAO,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,eAAe,EAAE,MAAM,CAAC,CAAC;IAC9C,CAAC;IAED,kBAAkB;QAChB,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;QAC/D,IAAI,GAAG,KAAK,CAAC,EAAE;YACb,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;SACzC;aAAM;YACL,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;SAClD;IACH,CAAC;IAED,UAAU;QACR,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,gBAAgB,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;QACxF,IAAI,gBAAgB,CAAC,MAAM,GAAG,CAAC,EAAE;YAC/B,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;SACjD;aAAM,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;YACnC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;SACzC;aAAM;YACL,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;SAC5C;IACH,CAAC;IAED,IAAI,UAAU;QACZ,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;QACxC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,WAAW,CAAC,CAAC;QAClD,OAAO,GAAG,CAAC;IACb,CAAC;IAEO,mBAAmB;QACzB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,WAAW,CAAC,CAAC;IAC5D,CAAC;IAED,gBAAgB,CAAC,IAAY;QAC3B,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,eAAe,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;QAC3C,IAAI,CAAC,cAAc,CAAC,EAAC,KAAK,EAAE,OAAO,EAAE,EAAE,EAAE,OAAO,EAAE,GAAG,GAAG,GAAG,IAAI,GAAG,aAAa,EAAE,EAAE,EAAE,EAAE,EAAC,CAAC,CAAC;IAC5F,CAAC;IAED,YAAY,CAAC,EAAU;;QACrB,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,UAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,0CAAE,YAAY,GAAG;IACrD,CAAC;IAED,WAAW,CAAC,GAAW;QACrB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,OAAO,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;IACxF,CAAC;IAED,cAAc,CAAC,GAAY;QACzB,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;IAC/B,CAAC;IAEE,aAAa;QACZ,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC;IAED,aAAa;QACZ,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC;IAEJ,eAAe,CAAC,cAAsB,EAAE,QAAgB;QACtD,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;YACjC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,cAAc,EAAE,QAAQ,CAAC,CAAC;SACrD;aAAM;YACL,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;gBACtB,IAAI,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;oBACvB,IAAI,CAAC,MAAM,CAAC,sBAAsB,CAAC,cAAc,EAAE,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;iBACpE;YACH,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;CACF;AAEH,SAAS,OAAO;IACd,OAAO,IAAI,IAAI,EAAE,CAAC,kBAAkB,CAAC,OAAO,EAAE,EAAC,IAAI,EAAE,SAAS,EAAE,MAAM,EAAC,SAAS,EAAC,CAAC,CAAC;AACrF,CAAC;AAEoC;;;;;;;;;;;;;AC9xBrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;;;;;;ICE2C,wEAA8B;IAAA,6DAAE;IAAA,qEAAe;;;;IAA3I,0EAA4F;IAAjC,mXAAgC;IAAC,2JAA+C;IAAA,uDAAU;IAAA,4DAAO;;;;IAAjD,0DAAa;IAAb,4EAAa;IAAmB,0DAAU;IAAV,0EAAU;;;IADzJ,wEACI;IAAA,oIAA4J;IAChK,qEAAe;;;IADS,0DAAwB;IAAxB,0FAAwB;;;IAI5C,yEAAmF;;;;IAAvC,uEAAU;;;IACtD,wEACI;IAAA,gEACA;IAAA,gEACJ;IAAA,qEAAe;;;IANnB,wEACI;IAAA,gEACA;IAAA,4IAAmF;IACnF,oJAGe;IACnB,qEAAe;;;IALa,0DAAkB;IAAlB,sFAAkB;IAC3B,0DAAgC;IAAhC,8FAAgC;;ADEhD,MAAM,uBAAuB;IAclC,YAAoB,EAAsB;QAAtB,OAAE,GAAF,EAAE,CAAoB;QAXnC,SAAI,GAAW,MAAM,CAAC;QAMtB,QAAG,GAAW,EAAE,CAAC;QAGjB,cAAS,GAAY,KAAK,CAAC;IAEY,CAAC;IAE/C,QAAQ;IACR,CAAC;IAED,YAAY;QACV,IAAI,MAAM,GAAwB,IAAI,GAAG,EAAE,CAAC;QAC5C,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;YAChC,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE;gBACtB,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAW,GAAG,CAAC,CAAC,CAAC;aACtD;iBAAM;gBACL,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;aACvB;QACH,CAAC,CAAC,CAAC;QACH,IAAI,KAAK,GAAe,EAAE,CAAC;QAC3B,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;YAChC,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;gBAC7B,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;aACpB;QACH,CAAC,CAAC,CAAC;QACH,OAAO,KAAK;aACT,GAAG,CAAC,CAAC,CAAC,EAAE;YACP,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAW,GAAG,CAAC,EAAE;gBACpC,OAAO;oBACL,IAAI,EAAE,CAAC,CAAC,IAAI,GAAG,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,GAAG;oBAC/C,IAAI,EAAE,CAAC;iBACR;aACF;iBAAM;gBACL,OAAO;oBACL,IAAI,EAAE,CAAC,CAAC,IAAI;oBACZ,IAAI,EAAE,CAAC;iBACR;aACF;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,KAAK,CAAC,CAAW;QACf,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IACrB,CAAC;;8FApDU,uBAAuB;uGAAvB,uBAAuB;QCTpC,sEAAK;QAAA,0EAAiD;QAA3C,+KAA0C;QAAC,uDAAgD;QAAA,4DAAO;QACzG,qIAEe;QACf,qIAOe;QACnB,4DAAM;;QAZgD,0DAAgD;QAAhD,sHAAgD;QACnF,0DAAe;QAAf,+EAAe;QAGf,0DAAgB;QAAhB,gFAAgB;;6FDKtB,uBAAuB;cALnC,uDAAS;eAAC;gBACT,QAAQ,EAAE,qBAAqB;gBAC/B,WAAW,EAAE,kCAAkC;gBAC/C,SAAS,EAAE,CAAC,kCAAkC,CAAC;aAChD;wHAIQ,IAAI;kBADV,mDAAK;YAIC,UAAU;kBADhB,mDAAK;YAIC,GAAG;kBADT,mDAAK;YAIC,SAAS;kBADf,mDAAK;;;;;;;;;;;;;;AEpBR;AAAA;AAAA;AAAA;AAAA;AAA2C;AACZ;AAC+B;;AAKvD,MAAM,0BAA0B;IAOrC;QANO,eAAU,GAAmB,IAAI,0DAAO,CAAC,EAAE,CAAC,CAAC;QAC7C,SAAI,GAAW,MAAM,CAAC;QACtB,QAAG,GAAW,EAAE,CAAC;QACjB,YAAO,GAAY,KAAK,CAAC;QACzB,WAAM,GAAG,IAAI,4CAAO,EAAE,CAAC;IAEd,CAAC;IAEjB,IAAI,CAAC,KAAqB,EAAE,IAAY,EAAE,OAAe;QACvD,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,GAAG,GAAG,OAAO,CAAC;QACnB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IACtB,CAAC;;oGAdU,0BAA0B;6GAA1B,0BAA0B,WAA1B,0BAA0B,mBAFzB,MAAM;6FAEP,0BAA0B;cAHtC,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAAoD;;;AAM7C,MAAM,aAAa;IAExB,YAAoB,GAAiB;QAAjB,QAAG,GAAH,GAAG,CAAc;IACrC,CAAC;IAED,SAAS,CAAC,KAAa,EAAE,GAAG,IAAe;QACzC,OAAO,IAAI,CAAC,GAAG,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;IAChD,CAAC;;0EAPU,aAAa;4GAAb,aAAa;6FAAb,aAAa;cAHzB,kDAAI;eAAC;gBACJ,IAAI,EAAE,WAAW;aAClB;;;;;;;;;;;;;;ACLD;AAAA;AAAA,MAAM,QAAQ;IAKZ;QACE,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;IACjB,CAAC;IAED,GAAG,CAAC,IAAY,EAAE,EAAU,EAAE,IAAS;QACrC,IAAI,EAAE,IAAI,IAAI,CAAC,KAAK,EAAE;YACpB,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;YAC9B,IAAI,QAAQ,GAAG,IAAI,EAAE;gBACnB,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC;gBACtB,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC;gBACrB,OAAO,QAAQ,CAAC;aACjB;iBAAM;gBACL,OAAO,QAAQ,CAAC;aACjB;SACF;aAAM;YACL,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC;YACrB,OAAO,KAAK,CAAC;SACd;IACH,CAAC;IAED,GAAG,CAAC,EAAU;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACvB,CAAC;IAED,WAAW,CAAC,IAAS,EAAE,YAAoB,EAAE,MAAc,EAAE,cAAwB;QACjF,IAAI,KAAK,GAAG,IAAI,CAAC;QACnB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,UAAU,EAAE;YAC1C,IAAI,MAAM,GAAG;gBACX,GAAG,EAAE,MAAM;gBACX,CAAC,EAAE,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC;gBAClB,GAAG,EAAE,cAAc;gBACnB,EAAE,EAAE,YAAY;gBAChB,EAAE,EAAE,EAAE;gBACN,GAAG,EAAE,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC;aACpB,CAAC;YACF,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAClB,OAAO,CAAC,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrE,CAAC,CAAC,CAAC;IACL,CAAC;CACF;AAEM,MAAM,yBAAyB;IASpC,YAAY,IAAS,EAAE,OAAe;QACpC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,SAAS,GAAG,EAAC,GAAG,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE,cAAc,EAAE,EAAE,EAAC,CAAC;QACvE,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IACtB,CAAC;IAED,aAAa,CAAC,EAAU;QACtB,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC;QACnD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACrB,CAAC;IAED,OAAO,CAAC,IAAS;QACf,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAChC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACvB,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,EAAE,CAAC,MAAM,EAAE,UAAS,CAAM;YAC7B,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QACtB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,EAAE,CAAC,MAAM,EAAE,UAAS,CAAM;YAC7B,KAAK,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,eAAe,CAAC,IAAS;QAC/B,KAAK,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;YACpD,EAAe,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;SACzE;IACH,CAAC;IAEO,UAAU,CAAC,CAAM;QACvB,OAAO,CAAC,GAAG,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9C,IAAI,CAAC,CAAC,GAAG,EAAE;YACT,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;YACtB,OAAO;SACR;QACD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QACrC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;QAC1B,IAAI,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC;QAC3D,IAAI,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE;YACnC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC;SAC9C;QACD,IAAI,SAAS,IAAI,QAAQ,EAAE;YACzB,IAAI,CAAC,yBAAyB,CAAC,CAAC,CAAC,CAAC;SACnC;QACD,IAAI,CAAC,iCAAiC,CAAC,CAAC,CAAC,CAAC;IAC5C,CAAC;IAEO,aAAa,CAAC,CAAM;QAC1B,IAAI,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;YAC3C,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;SAChD;IACH,CAAC;IAEO,cAAc,CAAC,MAAc;QACnC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAC3B,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,IAAI,QAAQ,EAAE,CAAC;SACzC;IACH,CAAC;IAEO,yBAAyB,CAAC,MAAW;QAC3C,IAAI,gBAAgB,GAAa,EAAE,CAAC;QACpC,IAAI,WAAW,GAAG,IAAI,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QACtC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC9B,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAC5B,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,UAAU,CAAC;YACjC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;gBACvB,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aAC1B;QACH,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,gBAAgB,CAAC,CAAC;QACrC,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,gBAAgB,CAAC,OAAO,CAAC,UAAS,EAAE;YAClC,IAAI,KAAK,GAAG,KAAK,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;YACzC,IAAI,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YAC/B,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;QACnB,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,iCAAiC,CAAC,MAAW;QACnD,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,IAAI,OAAO,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACvC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC1B,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAS,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,CAAS;YAC3E,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE;YAC5B,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;SAChC;IACH,CAAC;IAED,GAAG,CAAC,MAAc,EAAE,IAAS;QAC3B,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IACnD,CAAC;IAED,GAAG,CAAC,QAAgB,EAAE,EAAU,EAAE,IAAS;QACzC,IAAI,MAAM,GAAG;YACX,GAAG,EAAE,IAAI,CAAC,OAAO;YACjB,CAAC,EAAE,IAAI,CAAC,IAAI,EAAE;YACd,GAAG,EAAE,IAAI,CAAC,UAAU;YACpB,EAAE,EAAE,QAAQ;YACZ,EAAE,EAAE,EAAE;YACN,GAAG,EAAE,IAAI;SACV,CAAC;QACF,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAS,CAAM;YACjC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACjB,CAAC,CAAC;QACF,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;IAC1B,CAAC;IAED,GAAG,CAAC,QAAgB,EAAE,EAAU;QAC9B,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YAC7B,OAAO,SAAS,CAAC;SAClB;QACD,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IAC1C,CAAC;IAED,EAAE,CAAC,SAA4B,EAAE,QAAgB,EAAE,MAAgB;QACjE,IAAI,OAAO,SAAS,KAAK,QAAQ,EAAE;YACjC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC,CAAC;SACtD;aAAM;YACL,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,GAAG,MAAM,CAAC;SAC9C;IACH,CAAC;IAED,aAAa,CAAC,UAAkB,EAAE,OAAe,EAAE,IAAS;QAC1D,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QAC9C,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;YACpB,GAAG,EAAE,OAAO;YACZ,GAAG,EAAE,IAAI;SACV,CAAC,CAAC;IACL,CAAC;CAEF;;;;;;;;;;;;;ACjMD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4E;AAC7C;;;;AASxB,MAAM,oBAAoB;IAO/B,YAAoB,KAA4B,EAAU,GAAsB;QAA5D,UAAK,GAAL,KAAK,CAAuB;QAAU,QAAG,GAAH,GAAG,CAAmB;QAFxE,YAAO,GAAG,IAAI,4CAAO,EAAQ,CAAC;IAE8C,CAAC;IAErF,QAAQ;QACN,IAAI,CAAC,EAAE,CAAC,kBAAkB,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IAC3E,CAAC;IAED,WAAW;QACT,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IACtB,CAAC;IAED,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC;IACtB,CAAC;IAED,IAAI,EAAE;QACJ,OAAO,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC;IACpB,CAAC;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;IACvB,CAAC;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC;IAC1B,CAAC;IAED,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC;IAC7B,CAAC;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;IACvB,CAAC;IAED,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC;IAC3B,CAAC;IAED,eAAe;QACb,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,iBAAiB,KAAK,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC;IACjE,CAAC;;wFA/CU,oBAAoB;oGAApB,oBAAoB;QCVjC,8EACI;QAAA,yEAAyC;QAAA,uDAAiB;QAAA,4DAAS;QACnE,uDAAyF;QAAA,gEACzF;QAAA,oFAAsF;QACtF,oFAA4G;QAChH,4DAAW;;QALD,iFAAW;QACT,0DAAgC;QAAhC,wFAAgC;QAAC,0DAAiB;QAAjB,iGAAiB;QAC1D,0DAAyF;QAAzF,gLAAyF;QACpE,0DAAyB;QAAzB,iFAAyB;QACzB,0DAA6B;QAA7B,qFAA6B;;6FDMzC,oBAAoB;cALhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC7C;0MAIQ,EAAE;kBADR,mDAAK;;;;;;;;;;;;;;AEXR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;AAC9B;AAC8C;;;;;;;;;;;;;ICH7E,wEACI;IAAA,uEACI;IAAA,wEACI;IAAA,qEACI;IAAA,qEAAI;IAAA,kEAAO;IAAA,4DAAK;IAChB,qEAAI;IAAA,2EAA8E;IAAzC,+VAAsC;IAA3E,4DAA8E;IAAA,4DAAK;IAC3F,4DAAK;IACL,qEACI;IAAA,qEAAI;IAAA,oEAAQ;IAAA,4DAAK;IACjB,sEAAI;IAAA,4EAAwE;IAAtC,6VAAmC;IAArE,4DAAwE;IAAA,4DAAK;IACrF,4DAAK;IACT,4DAAQ;IACR,6EAA+B;IAAvB,sTAAsB;IAAC,qEAAS;IAAA,4DAAS;IACrD,4DAAO;IACX,qEAAe;;;IAT0C,0DAAsC;IAAtC,+FAAsC;IAIzC,0DAAmC;IAAnC,4FAAmC;;;;IAMzF,wEACI;IAAA,4EAAuC;IAA/B,6TAA8B;IAAC,8EAAmB;IAAA,4DAAS;IACnE,4EAA8B;IAAtB,oTAAqB;IAAC,4FAAiC;IAAA,4DAAS;IAC5E,qEAAe;;;;IAIH,4EAAgH;IAAtD,+SAAS,mDAA2C,IAAC;IAAC,mGAA8B;IAAA,4DAAS;;;;IACvJ,4EAA0E;IAA9C,+SAAS,2CAAmC,IAAC;IAAC,sEAAW;IAAA,4DAAS;;;IAC9F,wEAAkE;IAAA,iEAAM;IAAA,wEAAsJ;IAAA,uDAAW;IAAA,4DAAI;IAAA,qEAAe;;;;IAAhK,0DAAkC;IAAlC,0FAAkC;IAAoB,0IAA0E;IAAjJ,4JAAgB;IAAmI,0DAAW;IAAX,sFAAW;;;IAMzO,kFAA6E;;;IAA5B,qEAAQ;;;;IAXrE,wEACI;IAAA,yEACI;IAAA,yEACI;IAAA,6HAAuJ;IACvJ,6HAA8F;IAC9F,yIAA4P;IAC5P,mEAAO;IAAA,4EAA0B;IAAlB,kTAAc,CAAC,KAAE;IAAC,wEAAQ;IAAA,4DAAS;IAAA,4EAA2B;IAAnB,kTAAc,EAAE,KAAE;IAAC,0EAAS;IAAA,4DAAS;IAAA,6EAA2B;IAAnB,mTAAc,EAAE,KAAE;IAAC,0EAAS;IAAA,4DAAS;IAChJ,4DAAM;IACN,0EACI;IAAA,8EAAmC;IAEnC,mJAA6E;IACjF,4DAAM;IACN,2EACI;IAAA,+EAAqC;IACrC,2EAA6B;IACjC,4DAAM;IACV,4DAAM;IACN,kGAA4D;IAChE,qEAAe;;;IAhBM,0DAA+C;IAA/C,kHAA+C;IAC/C,0DAAiB;IAAjB,oFAAiB;IACE,0DAAoC;IAApC,6GAAoC;IAMhC,2DAAe;IAAf,wFAAe;;ADjBpD,MAAM,YAAY;IAYvB,YAAmB,YAAmC,EAAU,IAAgB,EAAE,GAAsB;QAArF,iBAAY,GAAZ,YAAY,CAAuB;QAAU,SAAI,GAAJ,IAAI,CAAY;QAXhF,UAAK,GAAG,WAAW,CAAC;QAEb,UAAK,GAAW,SAAS,CAAC;QAE1B,aAAQ,GAAG;YAChB,UAAU,EAAE,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC;YAC/C,OAAO,EAAE,wBAAwB;SAClC;QAEO,YAAO,GAAG,IAAI,4CAAO,EAAE,CAAC;QAG9B,YAAY,CAAC,SAAS,CACpB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,2BAA2B,CAAC,GAAG,EAAE,GAAE,GAAG,CAAC,aAAa,EAAE,GAAC,CAAC,EAC/D,IAAI,CAAC,OAAO,CAAC,CAAC;IAClB,CAAC;IAED,WAAW;QACT,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IACtB,CAAC;IAED,UAAU,CAAC,IAAY;QACrB,2FAA2F;QAC3F,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;QACnC,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,GAAQ,EAAE,EAAE;YAC1B,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,KAAK,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC;QACpB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,EAAU,EAAE,EAAE;YAC3B,gCAAgC;YAChC,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC,IAAS,EAAE,EAAE;YAChC,kCAAkC;YAClC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QACrD,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,gBAAgB,CAAC,IAAS,EAAE,QAAgB;QAClD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;YAC3D,IAAI,IAAI,GAAW,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;YACzD,OAAO,CAAC,GAAG,CAAC,mBAAmB,GAAG,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,CAAC;YAC1D,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,4DAAS,CAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,UAAoB,EAAE,IAAI,CAAC,CAAC,CAAC;YAChG,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,KAAK;QACH,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC;QACpC,IAAI,IAAI,EAAE;YACR,YAAY,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;YAC1C,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;SACvB;IACH,CAAC;IAED,gBAAgB,CAAC,IAAS,EAAE,MAAc;QACxC,IAAI,KAAK,GAAQ,EAAE,CAAC;QACpB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC1C,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACzB,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,2DAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;SACtD;QACD,IAAI,CAAC,GAAa,IAAI,CAAC,IAAI,CAAC;QAC5B,IAAI,IAAI,GAAG,EAAE,CAAC;QACd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACjC,IAAI,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YAChB,IAAI,CAAC,IAAI,CAAC,IAAI,uDAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC;SAC1C;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,IAAI;QACA,IAAI,KAAK,GAAG,MAAM,CAAC,oBAAoB,CAAC,CAAC;QACzC,IAAI,KAAK,EAAE;YACT,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;YACxD,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;SACvB;IACL,CAAC;IAED,aAAa;QACX,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;IACxB,CAAC;IAED,IAAI,CAAC,KAAa;QAChB,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC;QAC9C,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,MAAM,CAAC,gBAAgB,CAAC,UAAU,GAAG,CAAC,GAAG,QAAQ,GAAG,KAAK,GAAG,GAAG,CAAC,CAAC;IAC/F,CAAC;IAED,SAAS;QACP,OAAO,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,iBAAiB,KAAK,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC;IACnG,CAAC;IAED,IAAI,YAAY;QACd,OAAO,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,MAAM,CAAC;IAC5C,CAAC;;wEA9FY,YAAY;4FAAZ,YAAY;QCbzB,2HAce;QACf,0HAGe;QACf,2HAmBe;;QAtCA,yFAAyB;QAezB,0DAAyB;QAAzB,yFAAyB;QAIzB,0DAAwB;QAAxB,wFAAwB;;6FDN1B,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AACe;AAEA;AACT;AACkB;AACS;AACpB;AACuB;AACS;AACT;AAC0B;AAC1D;AACM;;AAuB5C,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YANJ;YACP,uEAAa;YACb,2DAAW;YACX,qEAAgB;YAChB,oEAAgB;SACjB;mIAIU,SAAS,mBAnBlB,2DAAY;QACZ,6EAAgB;QAChB,sFAAmB;QACnB,kEAAa;QACb,yFAAoB;QACpB,kGAAuB;QACvB,0FAAoB;QACpB,oHAA4B;QAC5B,gEAAa,aAGb,uEAAa;QACb,2DAAW;QACX,qEAAgB;QAChB,oEAAgB;6FAKP,SAAS;cArBrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,6EAAgB;oBAChB,sFAAmB;oBACnB,kEAAa;oBACb,yFAAoB;oBACpB,kGAAuB;oBACvB,0FAAoB;oBACpB,oHAA4B;oBAC5B,gEAAa;iBACd;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,2DAAW;oBACX,qEAAgB;oBAChB,oEAAgB;iBACjB;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACpCD;AAAA;AAAA;AAAA;AAAA;AAA2C;AAC+B;AAC/B;;AAMpC,MAAM,qBAAqB;IAsBhC;QApBO,UAAK,GAA2C,IAAI,oDAAe,CAAwB,SAAS,CAAC,CAAC;IAoB7F,CAAC;IAlBjB,IAAW,SAAS;QAClB,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAe,CAAC;IAC5C,CAAC;IAEM,IAAI,CAAC,CAAY;QACtB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACrB,CAAC;IAEM,SAAS,CAAC,OAA8B,EAAE,OAAqB;QACpE,IAAI,CAAC,KAAK;aACP,IAAI,CAAC,gEAAS,CAAC,OAAO,CAAC,CAAC;aACxB,SAAS,CAAC,CAAC,CAAC,EAAE;YACb,IAAI,CAAC,EAAE;gBACL,OAAO,CAAC,CAAC,CAAC,CAAC;aACZ;QACH,CAAC,CAAC,CAAC;IACP,CAAC;;0FApBU,qBAAqB;wGAArB,qBAAqB,WAArB,qBAAqB,mBAFpB,MAAM;6FAEP,qBAAqB;cAHjC,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACnB;AAEiB;;;AAQzC,MAAM,oBAAoB;IAM/B,YAAoB,EAAsB;QAAtB,OAAE,GAAF,EAAE,CAAoB;QAFlC,YAAO,GAAG,IAAI,4CAAO,EAAE,CAAC;QAG9B,IAAI,CAAC,OAAO,GAAG,IAAI,2DAAQ,CAAC,KAAK,EAAE,kHAAkH,CAAC,CAAC;QACvJ,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,GAAG,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IACzD,CAAC;IAED,QAAQ;IACR,CAAC;IAED,WAAW;QACT,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IACtB,CAAC;;wFAhBU,oBAAoB;oGAApB,oBAAoB;QCXjC,oEACA;;QADoB,wJAAqB;QAAC,8FAAwB;;6FDWrD,oBAAoB;cALhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC7C;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAAA;AAA2C;AACZ;AACY;;AAMpC,MAAM,kBAAkB;IAc7B;QAZO,UAAK,GAAsB,IAAI,4CAAO,EAAY,CAAC;IAY1C,CAAC;IAVV,OAAO,CAAC,CAAW;QACxB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACrB,CAAC;IAEM,SAAS,CAAC,OAA6B,EAAE,OAAqB;QACnE,IAAI,CAAC,KAAK;aACP,IAAI,CAAC,gEAAS,CAAC,OAAO,CAAC,CAAC;aACxB,SAAS,CAAC,OAAO,CAAC,CAAC;IACxB,CAAC;;oFAZU,kBAAkB;qGAAlB,kBAAkB,WAAlB,kBAAkB,mBAFjB,MAAM;6FAEP,kBAAkB;cAH9B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuF;AACxD;AAEiC;;;;;;;;;;ICD5D,yEACA;IAD2D,kVAA2B;;IAAtF,4DACA;;;IADiH,uFAAkB;IAA5C,uMAAyB;;;IAEhH,yEAA0C;IAAA,uDAAgB;IAAA,4DAAM;;;IAAtB,0DAAgB;IAAhB,oFAAgB;;;;IAIxD,uEAAsF;IAAxC,sSAAS,6CAA6B,IAAC;IAAC,iEAAM;IAAA,4DAAI;;;;IAChG,uEAA+F;IAAlD,sSAAS,uDAAuC,IAAC;IAAC,gFAAqB;IAAA,4DAAI;;;;IACxH,uEAAwF;IAA1C,sSAAS,+CAA+B,IAAC;IAAC,oEAAS;IAAA,4DAAI;;;;IACrG,uEAA8E;IAAhD,sSAAS,qDAAqC,IAAC;IAAC,4EAAiB;IAAA,4DAAI;;;;IACnG,uEAAoF;IAAtD,sSAAS,2DAA2C,IAAC;IAAC,oFAAyB;IAAA,4DAAI;;;;IACjH,uEAAqF;IAAnC,kVAAkC;IAAC,iFAAsB;IAAA,4DAAI;;;;IAC/G,uEAAyD;IAA3B,0UAA0B;IAAC,yEAAc;IAAA,4DAAI;;;;IAC3E,uEAAiF;IAAnD,sSAAS,wDAAwC,IAAC;IAAC,6EAAkB;IAAA,4DAAI;;;;IACvG,uEAA6E;IAA/C,sSAAS,oDAAoC,IAAC;IAAC,oFAAyB;IAAA,4DAAI;;;;IAC1G,uEAA2E;IAA7C,uSAAS,kDAAkC,IAAC;IAAC,iEAAM;IAAA,4DAAI;;;;IACrF,uEAAgG;IAA9C,uSAAS,mDAAmC,IAAC;IAAC,0FAA0B;IAAA,4DAAI;;;;IAC9H,uEAAmG;IAAjD,uSAAS,sDAAsC,IAAC;IAAC,oFAAyB;IAAA,4DAAI;;;;IAChI,uEAAiD;IAAtB,8TAAqB;IAAC,uFAAuB;IAAA,4DAAI;;;IAb9E,wEACE;IAAA,oHAAgG;IAChG,oHAAwH;IACxH,oHAAqG;IACrG,oHAAmG;IACnG,oHAAiH;IACjH,oHAA+G;IAC/G,oHAA2E;IAC3E,oHAAuG;IACvG,oHAA0G;IAC1G,sHAAqF;IACrF,sHAA8H;IAC9H,sHAAgI;IAChI,sHAA4E;IAC9E,qEAAe;;;IAbT,0DAAwC;IAAxC,kHAAwC;IACxC,0DAAuC;IAAvC,iHAAuC;IACvC,0DAAwC;IAAxC,kHAAwC;IACxC,0DAAwB;IAAxB,2FAAwB;IACxB,0DAAwB;IAAxB,2FAAwB;IACxB,0DAA4C;IAA5C,sHAA4C;IAC5C,0DAAwB;IAAxB,2FAAwB;IACxB,0DAAwB;IAAxB,2FAAwB;IACxB,0DAAwB;IAAxB,2FAAwB;IACxB,0DAAwB;IAAxB,2FAAwB;IACxB,0DAA4C;IAA5C,sHAA4C;IAC5C,0DAA4C;IAA5C,sHAA4C;IAC5C,0DAAqB;IAArB,wFAAqB;;;;IAE3B,wEACE;IAAA,uEAA2C;IAAxC,kVAAuC;IAAC,kFAAkB;IAAA,4DAAI;IACnE,qEAAe;;ADXZ,MAAM,aAAa;IAYxB,YACU,KAA4B,EAC5B,EAAsB,EACtB,IAA2B,EAC3B,GAAsB,EACtB,GAA+B;QAJ/B,UAAK,GAAL,KAAK,CAAuB;QAC5B,OAAE,GAAF,EAAE,CAAoB;QACtB,SAAI,GAAJ,IAAI,CAAuB;QAC3B,QAAG,GAAH,GAAG,CAAmB;QACtB,QAAG,GAAH,GAAG,CAA4B;QAXlC,QAAG,GAAW,EAAE,CAAC;QAEjB,UAAK,GAAY,KAAK,CAAC;QAEtB,YAAO,GAAG,IAAI,4CAAO,EAAE,CAAC;QAS9B,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,aAAa,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IAC1D,CAAC;IAED,QAAQ;IACR,CAAC;IAED,WAAW;QACT,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IACtB,CAAC;IAED,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;IAC9B,CAAC;IAED,KAAK,CAAC,CAAO;QACX,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IAC1B,CAAC;IAED,eAAe,CAAC,MAAc;QAC5B,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;IACpC,CAAC;IAED,IAAI,YAAY;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC;IAChC,CAAC;IAED,UAAU,CAAC,IAAU;QACnB,IAAI,KAAK,GAAG,MAAM,CAAC,cAAc,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QACjD,IAAI,KAAK,KAAK,IAAI,EAAE;YAClB,OAAO;SACR;QACD,IAAI,KAAK,KAAK,EAAE,EAAE;YAChB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC;SACtD;aAAM;YACL,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;SAClD;IACH,CAAC;IAED,oBAAoB,CAAC,QAAgB;QACnC,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,KAAK,QAAQ,EAAE;YAClC,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;SAC7D;QACD,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC;IACzB,CAAC;IAED,SAAS;QACP,IAAI,KAAK,GAAG,IAAI,0DAAO,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC7C,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,eAAe,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACzF,CAAC;IAEO,gBAAgB,CAAC,YAAsB;QAC7C,OAAO,YAAY;aAChB,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;aACrC,IAAI,CAAC,GAAG,CAAC,CAAC;IACf,CAAC;;0EAzEU,aAAa;6FAAb,aAAa;QCb1B,yEACE;QAAA,yEACE;QAAA,yGACA;QAAA,yEACA;QADkB,0IAAa,mBAAgB,IAAC;;QAAhD,4DACA;QAAA,yGAAgE;QAClE,4DAAM;QACN,yEACE;QAAA,6HAce;QACf,2HAEe;QACjB,4DAAM;QACR,4DAAM;;QAzBC,0DAA4B;QAA5B,oFAA4B;QACZ,0DAAyB;QAAzB,+FAAyB;QACkC,0DAAqB;QAArB,2FAAqB;QAAlD,4MAA4B;QACvE,0DAAkB;QAAlB,kFAAkB;QAGT,0DAAmB;QAAnB,mFAAmB;QAenB,0DAAkB;QAAlB,kFAAkB;;6FDTxB,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;8dAIQ,IAAI;kBADV,mDAAK;YAIC,GAAG;kBADT,mDAAK;;;;;;;;;;;;;;AElBR;AAAA;AAAA;AAAA;AAAyC;AACc;;;AAEvD,MAAM,MAAM,GAAW,EAAE,CAAC;AAMnB,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import { ChangeDetectorRef, Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { CardBag, CardStash, GameField } from '../domain/game-field';\nimport { GameFieldStoreService } from '../game-field-store.service';\nimport { ModalCardCollectionService } from '../modal-card-collection.service';\nimport { ModalCardCollectionComponent } from '../modal-card-collection/modal-card-collection.component';\n\n@Component({\n  selector: 'mrn-self-player',\n  templateUrl: './self-player.component.html',\n  styleUrls: ['./self-player.component.scss']\n})\nexport class SelfPlayerComponent implements OnInit {\n\n  private destroy = new Subject();\n\n  constructor(\n      private field: GameFieldStoreService, \n      private cdr: ChangeDetectorRef, \n      private mcc: ModalCardCollectionService) {\n    field.subscribe(\n      (f: GameField) => f.myself.subscribeForUpdate(() => cdr.markForCheck()),\n      this.destroy);\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngOnDestroy(): void {\n    this.destroy.next();\n  }\n\n  get name(): string {\n    return this.field.gameField.myself.name;\n  }\n\n  get id(): string {\n    return this.field.gameField.myself.id;\n  }\n\n  get gameField(): GameField {\n    return this.field.gameField;\n  }\n\n  librarySize(): number {\n    return this.field.gameField.myself.library.size;\n  }\n\n  get lifes(): number {\n    return this.field.gameField.myself.lifes;\n  }\n\n  get hand(): CardBag {\n    return this.field.gameField.myself.hand;\n  }\n\n  get table(): CardBag {\n    return this.field.gameField.myself.table;\n  }\n\n  get graveyard(): CardStash {\n    return this.field.gameField.myself.graveyard;\n  }\n\n  get exile(): CardBag {\n    return this.field.gameField.myself.exile;\n  }\n\n  untapAll() {\n    this.field.gameField.myself.untapAll();\n  }\n\n  drawCard() {\n    this.field.gameField.myself.drawCard();\n  }\n\n  decreaseLifes() {\n    this.field.gameField.decreaseLifes();\n  }\n\n  increaseLifes() {\n    this.field.gameField.increaseLifes();\n  }\n\n  multiLifeDecrease() {\n    let count = prompt('Anzahl verlorener Leben');\n    if (count) {\n      this.field.gameField.myself.changeLifeCount(-Number.parseInt(count));\n    }\n  }\n\n  multiLifeIncrease() {\n    let count = prompt('Anzahl zusätzlicher Leben');\n    if (count) {\n      this.field.gameField.myself.changeLifeCount(Number.parseInt(count));\n    }\n  }\n\n  isCurrentPlayer(): boolean {\n    return this.field.gameField.currentPlayerName === this.field.gameField.myself.name;\n  }\n\n  openLibrary() {\n    this.gameField.myself.sendNotification('öffnet die Bibliothek');\n    let subscr = this.mcc.closed.subscribe(() => {\n      this.gameField.myself.sendNotification('schließt die Bibliothek')\n      subscr.unsubscribe();\n    });\n    this.mcc.show(this.gameField.myself.library, 'Bibliothek', 'DR,PL,PT,GR');\n  }\n\n  shuffleLibrary() {\n    this.gameField.myself.shuffleLibrary();\n  }\n\n  createToken() {\n    let lastName = localStorage.getItem('lastTokenName');\n    let name = prompt('Name', lastName ? lastName : undefined);\n    if (name) {\n      localStorage.setItem('lastTokenName', name);\n      this.gameField.myself.createToken(name);\n    }\n  }\n}\n","<fieldset id=\"{{id}}\">\n<legend [class.turn]=\"isCurrentPlayer()\"><b>{{name}}</b> (ID: {{id}})</legend>\n    <mrn-card-collection [collection]=\"this.hand\" name=\"Hand\" [act]=\"'PL,PT,GR,EX,LI'\"></mrn-card-collection>\n    <mrn-card-collection [collection]=\"this.table\" name=\"Ausgelegt\" [act]=\"'TA,UT,BL,GR,EX,HA,MO,CO,LI'\"></mrn-card-collection>\n    <button (click)=\"this.untapAll()\">Alles enttappen</button>\n    <div>Bibliothek: {{this.librarySize()}} Karten. \n        <button (click)=\"this.drawCard()\">Karte ziehen</button>\n        <button (click)=\"this.openLibrary()\">Bibliothek öffnen</button>\n        <button (click)=\"this.shuffleLibrary()\">Bibliothek mischen</button>\n        <button (click)=\"this.createToken()\">Token erstellen</button>\n    </div>\n    <mrn-card-collection [collection]=\"this.graveyard\" name=\"Friedhof\" [act]=\"'PL,PT,HA,EX,LI'\" [collapsed]=\"true\"></mrn-card-collection>\n    <mrn-card-collection *ngIf=\"this.exile.size > 0\" [collection]=\"this.exile\" name=\"Aus dem Spiel\" [act]=\"'GR'\" [collapsed]=\"true\"></mrn-card-collection>\n    <div>Lebenspunkte: {{this.lifes}}\n        <button (click)=\"this.increaseLifes()\">+</button>\n        <button (click)=\"this.decreaseLifes()\">-</button>\n        <button (click)=\"this.multiLifeIncrease()\">+X ...</button>\n        <button (click)=\"this.multiLifeDecrease()\">-X ...</button>\n    </div>\n</fieldset>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { CardCollection } from '../domain/game-field';\nimport { ModalCardCollectionService } from '../modal-card-collection.service';\n\n@Component({\n  selector: 'mrn-modal-card-collection',\n  templateUrl: './modal-card-collection.component.html',\n  styleUrls: ['./modal-card-collection.component.scss']\n})\nexport class ModalCardCollectionComponent implements OnInit {\n\n  constructor(public service: ModalCardCollectionService) { \n    service\n  }\n\n  ngOnInit(): void {\n  }\n\n  hide() {\n    this.service.isShown = false;\n    this.service.closed.next();\n  }\n\n}\n","<div *ngIf=\"this.service.isShown\" class=\"glass-pane\">\n    <div class=\"content-pane\">\n        <button (click)=\"this.hide()\">Schließen</button>\n        <mrn-card-collection [name]=\"this.service.name\" [collection]=\"this.service.collection\" [act]=\"this.service.act\"></mrn-card-collection>    \n    </div>\n</div>\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, Output } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { GameField, MsgData } from '../domain/game-field';\nimport { GameFieldStoreService } from '../game-field-store.service';\n\n@Component({\n  selector: 'mrn-chat-box',\n  templateUrl: './chat-box.component.html',\n  styleUrls: ['./chat-box.component.scss']\n})\nexport class ChatBoxComponent implements OnInit {\n\n  public messages: MsgData[] = [];\n\n  private destroy = new Subject();\n\n  constructor(private field: GameFieldStoreService, private cdr: ChangeDetectorRef) { \n    field.subscribe(\n      gf => gf.registerMessageHandler((id: undefined, msg: any) => this.handleAddedMessage(msg)),\n      this.destroy);\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngOnDestroy(): void {\n    this.destroy.next();\n  }\n\n  handleAddedMessage(msg: MsgData) {\n    this.messages.push(msg);\n    this.cdr.detectChanges();\n    this.scrollToBottom();\n  }\n\n  scrollToBottom() {\n    let elem = document.getElementById('chatbox');\n    if (elem) {\n      elem.scrollTop = elem.scrollHeight;\n    }\n  }\n\nsendMessage(): void {\n      var message = prompt('Nachricht');\n      if (message) {\n        this.field.gameField.sendMessage(message);\n      }\n  }\n\n}\n","<fieldset>\n<legend>Chat</legend>\n<button (click)=\"this.sendMessage()\">Schreiben ...</button>\n<div class=\"chatbox\" id=\"chatbox\">\n    <div *ngFor=\"let m of messages\">\n        <ng-container *ngIf=\"m.tr === ''\">\n            <span [style.color]=\"m.color\">{{m.tc}}</span>\n        </ng-container>\n        <ng-container *ngIf=\"m.tr !== ''\">\n            <span [style.color]=\"m.color\">{{m.tc}}: </span>{{m.tr}}\n        </ng-container>\n    </div>\n</div>\n</fieldset>","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CardActionModeService {\n  private savedCardId: number | undefined = undefined;\n  private subject = new Subject();\n\n  constructor() { }\n\n  selectForModify(cardId: number) {\n    this.savedCardId = cardId;\n    this.subject.next();\n  }\n  normalMode() {\n    this.savedCardId = undefined;\n    this.subject.next();\n  }\n  get savedId(): number {\n    return this.savedCardId as number;\n  }\n  get isModifyMode(): boolean {\n    return typeof this.savedCardId !== 'undefined';\n  }\n  subscribe(handler: () => void, destroy: Subject<unknown>) {\n    this.subject.pipe(takeUntil(destroy)).subscribe(handler);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { DistributedDatabaseSystem } from './distributed-database';\n\nclass CardType {\n\n    public readonly img: string;\n    public readonly token: boolean;\n\n    constructor(public name: string, img: string | undefined, token?: boolean) {\n      if (token) {\n        this.token = true;\n      } else {\n        this.token = false;\n      }\n      if (img) {\n        this.img = img;\n      } else {\n        this.img = 'data:image/svg+xml;base64,' + btoa(this.createSvg(name.replace(/[^a-zA-Z0-9 ]/, '')));\n      }\n    }\n\n    private createSvg(title: string): string {\n      return '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 240 334\"><rect x=\"5\" y=\"5\" width=\"230\" height=\"324\" fill=\"gray\" /><text x=\"20\" y=\"35\">' + title + '</text></svg>';\n    }\n  \n    toDto() {\n      return {\n        name: this.name,\n        img: this.img\n      };\n    }\n  }\n  \n  function cardTypeFromDto(dto: any) {\n    return new CardType(dto.name, dto.img);\n  }\n  \n  var cardCnt = 0;\n\n  enum CardState {\n    Normal,\n    Blocker,\n    Tapped\n  }\n  \n  class Card {\n    public type: CardType;\n    public controllerId: string;\n    public id: number;\n    public state: CardState = CardState.Normal;\n    private mods: Card[];\n    public counter: string | undefined;\n  \n    constructor(type: CardType, controllerId: string, id?: number, tapped?: boolean, mods?: Card[], counter?: string) {\n      this.type = type;\n      this.controllerId = controllerId;\n      if (typeof id === 'undefined') {\n        this.id = Math.floor(Math.random() * 10000) * 1000 + cardCnt++;\n      } else {\n        this.id = id;\n      }\n      if (typeof tapped === 'undefined') {\n        this.state = CardState.Normal;\n      } else {\n        this.state = tapped ? CardState.Tapped : CardState.Normal;\n      }\n      if (typeof mods === 'undefined') {\n        this.mods = [];\n      } else {\n        this.mods = mods;\n      }\n      this.counter = counter;\n    }\n\n    get tapped(): boolean {\n      return this.state === CardState.Tapped;\n    }\n  \n    get normal(): boolean {\n      return this.state === CardState.Normal;\n    }\n  \n    get markedAsBlocker(): boolean {\n      return this.state === CardState.Blocker;\n    }\n  \n    tap() {\n      this.state = CardState.Tapped;\n    }\n  \n    markAsBlocker() {\n      if (this.state === CardState.Normal) {\n        this.state = CardState.Blocker;\n      }\n    }\n  \n    untap() {\n      this.state = CardState.Normal;\n    }\n\n    modifyWith(c: Card) {\n      this.mods.push(c);\n    }\n  \n    clearModifiers() {\n      this.mods = [];\n    }\n\n    isModifiedBy(cardId: number): boolean {\n      for (let i = 0; i < this.mods.length; i++) {\n        if (this.mods[i].id === cardId) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    removeModifier(cardId: number): Card | null {\n      for (let i = 0; i < this.mods.length; i++) {\n        if (this.mods[i].id === cardId) {\n          let card = this.mods[i];\n          this.mods.splice(i, 1);\n          return card;\n        }\n      }\n      return null;\n    }\n\n    get name() {\n      return this.type.name;\n    }\n\n    get img() {\n      return this.type.img;\n    }\n\n    get isModified(): boolean {\n      return this.mods.length > 0;\n    }\n\n    get reversedModifiers(): Card[] {\n      return this.mods.slice().reverse();\n    }\n\n    get modifiers(): Card[] {\n      return this.mods;\n    }\n  \n    toDto(): DtoCard {\n      return {\n        id: this.id,\n        cntr: this.controllerId,\n        type: this.type.toDto(),\n        tapped: this.tapped,\n        mods: this.mods.map(x => x.toDto()),\n        counter: this.counter\n      }\n    }\n  }\n\n  interface DtoCardType {\n\n  }\n\n  interface DtoCard {\n      type: DtoCardType;\n      cntr: string;\n      id: number;\n      tapped: boolean;\n      mods: DtoCard[];\n      counter: string | undefined;\n  }\n  \n  function cardFromDto(dto: DtoCard): Card {\n    return new Card(cardTypeFromDto(dto.type), dto.cntr, dto.id, dto.tapped, dto.mods.map(cardFromDto), dto.counter);\n  }\n  \n  export abstract class CardCollection implements Iterable<Card> {\n    constructor(public cards: Card[]) {\n    }\n\n    [Symbol.iterator](): Iterator<Card, any, undefined> {\n      return this.cards[Symbol.iterator]();\n    }\n\n    abstract add(card: Card): void;\n  \n    contains(cardId: number) {\n      for (let i = 0; i < this.cards.length; i++) {\n        if (this.cards[i].id === cardId) {\n          return true;\n        }\n      }\n      return false;\n    }\n  \n    getById(cardId: number) {\n      for (let i = 0; i < this.cards.length; i++) {\n        if (this.cards[i].id === cardId) {\n          return this.cards[i];\n        }\n      }\n      return null;\n    }\n  \n    remove(cardId: number) {\n      for (let i = 0; i < this.cards.length; i++) {\n        if (this.cards[i].id === cardId) {\n          let card = this.cards[i];\n          this.cards.splice(i, 1);\n          return card;\n        }\n      }\n      return null;\n    }\n  \n    get size() {\n      return this.cards.length;\n    }\n  \n    toDto() {\n      return this.cards.map(x => x.toDto());\n    }\n  }\n  \n  export class CardStash extends CardCollection {\n    constructor(cards: Card[]) {\n      super(cards);\n    }\n  \n    add(card: Card): void {\n      this.cards.unshift(card);\n    }\n  \n    shuffle() {\n      var currentIndex = this.cards.length;\n      var temporaryValue;\n      var randomIndex;\n  \n      // While there remain elements to shuffle...\n      while (0 !== currentIndex) {\n  \n        // Pick a remaining element...\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex -= 1;\n  \n        // And swap it with the current element.\n        temporaryValue = this.cards[currentIndex];\n        this.cards[currentIndex] = this.cards[randomIndex];\n        this.cards[randomIndex] = temporaryValue;\n      }\n    }\n  \n    draw() {\n      return this.cards.shift();\n    }\n  }\n  \n  export class CardBag extends CardCollection {\n    constructor(cards: Card[]) {\n      super(cards);\n    }\n\n    add(card: Card): void {\n      let idx = this.cards.findIndex(x => x.type.name === card.type.name);\n      if (idx < 0) {\n        this.cards.push(card);\n      } else {\n        this.cards.splice(idx, 0, card);\n      }\n    }\n  \n  }\n  \n  class SelfPlayer implements PlayerData {\n      public readonly id: string;\n      public readonly name: string;\n      public readonly library: CardStash;\n      public readonly hand: CardBag;\n      public readonly table: CardBag;\n      public readonly graveyard: CardStash;\n      public readonly exile: CardBag;\n      public lifes: number;\n      public readonly color: string;\n      public readonly db: DistributedDatabaseSystem;\n      public readonly orderNumber: number;\n      private readonly subject: Subject<void> = new Subject();\n\n    constructor(id: string, name: string, deck: Card[], db: DistributedDatabaseSystem) {\n      this.id = id;\n      this.name = name;\n      this.db = db;\n      this.library = new CardStash(deck);\n      this.library.shuffle();\n      this.db.put('librarySizes', this.id, this.library.size);\n      this.hand = new CardBag([]);\n      this.table = new CardBag([]);\n      this.graveyard = new CardStash([]);\n      this.db.put('graveyards', this.id, this.graveyard.toDto());\n      this.exile = new CardBag([]);\n      this.db.put('exiles', this.id, this.exile.toDto());\n      this.lifes = 20;\n      this.db.put('lifes', this.id, this.lifes);\n      this.color = 'hsl(' + (Math.floor(Math.random() * 72) * 5) + ',90%,40%)';\n      this.orderNumber = Math.random();\n\n      this.db.on('receiveCommand', 'putToGraveyard', (cardDto: DtoCard) => this.addToGraveyard(cardFromDto(cardDto)));\n      this.db.on('receiveCommand', 'modifyCard', (x: any) => this.modifyWithOthersCard(x.tgt, cardFromDto(x.card)));\n    }\n  \n    subscribeForUpdate(arg0: () => void): void {\n      this.subject.subscribe(arg0);\n    }\n\n    makeColored(tc: string, tr: string): MsgData {\n        return {\n            color: this.color,\n            tc: tc,\n            tr: tr\n        }\n    }\n\n    untapAll() {\n      this.table.cards.forEach(c => {\n        if (!c.normal) {\n          this.untap(c.id);\n        }\n      });\n    }\n  \n    drawCard(cardId?: number | undefined) {\n      let c;\n      if (cardId) {\n        let coll = this.getContainingCollection(cardId);\n        c = this.removeFromCollection(coll, cardId);  \n      } else {\n        c = this.library.draw();\n      }\n      this.db.put('librarySizes', this.id, this.library.size);\n      if (!c) {\n        this.sendNotification('kann nicht ziehen');\n        return;\n      }\n      this.addToHand(c);\n      this.sendNotification('zieht eine Karte');\n      this.subject.next();\n    }\n\n    shuffleLibrary() {\n      this.sendNotification('mischt die Bibliothek');\n      this.library.shuffle();\n    }\n\n    private addToHand(c: Card) {\n      this.hand.add(c);\n      this.db.put('handSizes', this.id, this.hand.size);\n    }\n  \n    changeLifeCount(diff: number) {\n      this.lifes += diff;\n      this.db.put('lifes', this.id, this.lifes);\n      if (diff > 0) {\n        this.sendNotification('erhöht Lebenspunkte um ' + diff + ' auf ' + this.lifes);\n      } else {\n        this.sendNotification('verringert Lebenspunkte um ' + -diff + ' auf ' + this.lifes);\n      }\n      this.subject.next();\n    }\n  \n    putToGraveyard(cardId: number) {\n      let coll = this.getContainingCollection(cardId);\n      let card = this.removeFromCollection(coll, cardId);\n      this.addToGraveyard(card);\n      this.subject.next();\n    }\n\n    private addToGraveyard(card: Card) {\n      if (card.type.token) {\n        this.sendNotification('Token ' + card.name + ' verschwindet');\n        return;\n      }\n      card.untap();\n      if (this.id === card.controllerId) {\n        this.graveyard.add(card);\n        this.db.put('graveyards', this.id, this.graveyard.toDto());  \n        this.sendNotification('legt ' + card.name + ' auf Friedhof');\n      } else {\n        this.db.sendCommandTo(card.controllerId, 'putToGraveyard', card.toDto());\n      }\n    }\n  \n    putToExile(cardId: number) {\n      let coll = this.getContainingCollection(cardId);\n      let card = this.removeFromCollection(coll, cardId);\n      if (card.type.token) {\n        this.sendNotification('Token ' + card.name + ' verschwindet');\n        return;\n      }\n      card.untap();\n      this.exile.add(card);\n      this.db.put('exiles', this.id, this.exile.toDto());\n      this.sendNotification('nimmt ' + card.name + ' ganz aus dem Spiel');\n      this.subject.next();\n    }\n  \n    putIntoPlay(cardId: number) {\n      let coll = this.getContainingCollection(cardId);\n      let card = this.removeFromCollection(coll, cardId);\n      this.addToTable(card);\n      this.sendNotification('spielt ' + card.name + ' aus');\n      this.subject.next();\n    }\n  \n    putIntoPlayTapped(cardId: number) {\n      let collData = this.getContainingCollection(cardId);\n      let card = this.removeFromCollection(collData, cardId);\n      card.tap();\n      this.addToTable(card);\n      this.sendNotification('spielt ' + card.name + ' getappt aus');\n      this.subject.next();\n    }\n  \n    putToHand(cardId: number) {\n      let coll = this.getContainingCollection(cardId);\n      let card = this.removeFromCollection(coll, cardId);\n      card.untap();\n      this.addToHand(card);\n      this.sendNotification('nimmt ' + card.name + ' auf die Hand');\n      this.subject.next();\n    }\n  \n    putOnLibrary(cardId: number) {\n      let coll = this.getContainingCollection(cardId);\n      let card = this.removeFromCollection(coll, cardId);\n      card.untap();\n      this.library.add(card);\n      this.db.put('librarySizes', this.id, this.library.size);\n      if (coll?.countOnly) {\n        this.sendNotification('legt eine Karte oben auf die Bibliothek');\n      } else {\n        this.sendNotification('legt ' + card.name + ' oben auf die Bibliothek');\n      }\n      this.subject.next();\n    }\n  \n    modifyOwnCard(modifierCardId: number, toModifyCardId: number) {\n      let toModify = this.table.getById(toModifyCardId);\n      if (!toModify) {\n        return;\n      }\n\n      let collData = this.getContainingCollection(modifierCardId);\n      let card = this.removeFromCollection(collData, modifierCardId);\n      this.applyModification(toModify, card);\n    }\n\n    setCounter(cardId: number, value: string | undefined) {\n      let card = this.table.getById(cardId);\n      if (!card) {\n        return;\n      }\n      card.counter = value;\n      this.db.put('tables', this.id, this.table.toDto());\n      this.sendNotification('setzt Counter für ' + card.name + ' auf ' + value);\n      this.subject.next();\n    }\n\n    modifyOtherPlayersCard(modifierCardId: number, toModifyCardId: number, otherPlayerId: string) {\n      let collData = this.getContainingCollection(modifierCardId);\n      let card = this.removeFromCollection(collData, modifierCardId);\n      this.db.sendCommandTo(otherPlayerId, 'modifyCard', {tgt: toModifyCardId, card: card.toDto()});\n    }\n\n    private modifyWithOthersCard(toModifyCardId: number, card: Card) {\n      let toModify = this.table.getById(toModifyCardId);\n      if (!toModify) {\n        return;\n      }\n\n      this.applyModification(toModify, card);\n    }\n\n    private applyModification(toModify: Card, card: Card) {\n      card.untap();\n      toModify.modifyWith(card);\n      this.db.put('tables', this.id, this.table.toDto());\n      this.sendNotification('spielt ' + card.name + ' auf ' + toModify.name);\n      this.subject.next();\n    }\n    \n    private removeFromCollection(collData: any, cardId: number) {\n      let card;\n      if (collData.nestedIn) {\n        card = collData.nestedIn.removeModifier(cardId);\n      } else {\n        card = collData.obj.remove(cardId);\n        this.dropModifiers(card);  \n      }\n      if (collData.countOnly) {\n        this.db.put(collData.name, this.id, collData.obj.size);\n      } else {\n        this.db.put(collData.name, this.id, collData.obj.toDto());\n      }\n      return card;\n    }\n\n    private dropModifiers(c: Card) {\n      c.modifiers.forEach(m => this.addToGraveyard(m));\n      c.clearModifiers();\n    }\n  \n    addToTable(card: Card) {\n      this.table.add(card);\n      this.db.put('tables', this.id, this.table.toDto());\n      this.subject.next();\n    }\n  \n    getContainingCollection(cardId: number) {\n      if (this.hand.contains(cardId)) {\n        return {obj: this.hand, name: 'handSizes', countOnly: true};\n      }\n      if (this.table.contains(cardId)) {\n        return {obj: this.table, name: 'tables', countOnly: false};\n      }\n      if (this.graveyard.contains(cardId)) {\n        return {obj: this.graveyard, name: 'graveyards', countOnly: false};\n      }\n      if (this.library.contains(cardId)) {\n        return {obj: this.library, name: 'librarySizes', countOnly: true};\n      }\n      if (this.exile.contains(cardId)) {\n        return {obj: this.exile, name: 'exiles', countOnly: false};\n      }\n      let nested = this.table.cards.filter(c => c.isModifiedBy(cardId));\n      if (nested.length > 0) {\n        return {obj: this.table, name: 'tables', countOnly: false, nestedIn: nested[0]};\n      }\n      return null;\n    }\n\n    hasCard(cardId: number) {\n      return this.getContainingCollection(cardId) !== null;\n    }\n  \n    tap(cardId: number) {\n      let card = this.table.getById(cardId);\n      if (!card) {\n        return;\n      }\n      card.tap();\n      this.db.put('tables', this.id, this.table.toDto());\n      this.sendNotification('tappt ' + card.name);\n      this.subject.next();\n    }\n  \n    markAsBlocker(cardId: number) {\n      let card = this.table.getById(cardId);\n      if (!card) {\n        return;\n      }\n      card.markAsBlocker();\n      this.db.put('tables', this.id, this.table.toDto());\n      this.sendNotification('markiert ' + card.name + ' als Blocker');\n      this.subject.next();\n    }\n  \n    untap(cardId: number) {\n      let card = this.table.getById(cardId);\n      if (!card) {\n        return;\n      }\n      card.untap();\n      this.db.put('tables', this.id, this.table.toDto());\n      this.sendNotification('enttappt ' + card.name);\n      this.subject.next();\n    }\n  \n    sendNotification(msg: string) {\n      this.db.add('messages', this.makeColored(curTime() + ' ' + this.name + ' ' + msg, ''));\n    }\n  \n    createToken(name: string) {\n      let type = new CardType(name, undefined, true);\n      let card = new Card(type, this.id);\n      this.addToTable(card);\n    }\n  }\n\n  interface PlayerData {\n    id: string,\n    name: string,\n    color: string,\n    orderNumber: number;\n  }\n  \n  export class OtherPlayer implements PlayerData {\n    private subject: Subject<void> = new Subject();\n    private cachedGraveyard: CardStash = new CardStash([]);\n    private cachedTable: CardStash = new CardStash([]);;\n\n    constructor(public id: string, public db: DistributedDatabaseSystem) {\n      db.on(['add', 'update'], 'graveyards', (playerId: string, content: DtoCard[]) => {\n        if (playerId === this.id) {\n          this.cachedGraveyard = this.map(content);\n          this.notifyUpdate();\n        }\n      });\n      db.on(['add', 'update'], 'tables', (playerId: string, content: DtoCard[]) => {\n        if (playerId === this.id) {\n          this.cachedTable = this.map(content);\n          this.notifyUpdate();\n        }\n      });\n    }\n  \n    get name(): string {\n      return this.playerData?.name;\n    }\n\n    get orderNumber(): number {\n      return this.playerData?.orderNumber;\n    }\n\n    get color(): string {\n      return this.playerData?.color;\n    }\n\n    private get playerData(): PlayerData {\n      return this.db.get('playerData', this.id);\n    }\n  \n    get lifes(): number {\n      return this.db.get('lifes', this.id);\n    }\n  \n    get handSize(): number {\n      return this.db.get('handSizes', this.id);\n    }\n  \n    get librarySize(): number {\n      return this.db.get('librarySizes', this.id);\n    }\n  \n    get graveyard() {\n      return this.cachedGraveyard;\n    }\n  \n    get table() {\n      return this.cachedTable;\n    }\n  \n    private map(data: DtoCard[]): CardStash {\n      return new CardStash(data.map(x => cardFromDto(x)));\n    }\n\n    notifyUpdate() {\n      console.log('notify update ' + this.id);\n      this.subject.next();\n    }\n  \n    subscribeForUpdate(arg0: () => void, destroy: Subject<void>) {\n      this.subject.pipe(takeUntil(destroy)).subscribe(arg0);\n    }\n\n    hasCard(cardId: number): boolean {\n      return this.table.contains(cardId);\n    }\n\n  }\n  \n  export interface MsgData {\n      color: string;\n      tc: string;\n      tr: string;\n  }\n  \n  class GameField {\n    private db: DistributedDatabaseSystem;\n    public others: OtherPlayer[];\n    public myself: SelfPlayer;\n  \n    constructor(peer: any, ownId: string, ownName: string, deck: Card[]) {\n      this.others = [];\n      this.db = new DistributedDatabaseSystem(peer, ownId);\n      this.db.on('add', 'playerData', (id: string, name: any) => this.updatePlayer(id));\n      this.db.on('update', 'playerData', (id: string, name: any) => this.updatePlayer(id));\n      this.db.on('update', 'lifes', (id: string, cnt: any) => this.updatePlayer(id));\n      this.db.on('update', 'graveyards', (id: string, cards: any) => this.updatePlayer(id));\n      this.db.on('update', 'tables', (id: string, cards: any) => this.updatePlayer(id));\n  \n      this.myself = new SelfPlayer(ownId, ownName, deck, this.db);\n      this.db.put('playerData', ownId, {\n        name: ownName,\n        color: this.myself.color,\n        orderNumber: this.myself.orderNumber\n      });\n    }\n\n    registerMessageHandler(handler: Function) {\n        this.db.on('add', 'messages', handler);\n    }\n  \n    registerPlayerChangeHandler(handler: Function) {\n      this.db.on('add', 'currentPlayer', handler);\n      this.db.on('update', 'currentPlayer', handler);\n  }\n\n  connectToOtherPlayer(id: string) {\n      this.db.connectToNode(id);\n      this.others.push(new OtherPlayer(id, this.db));\n      //this.updatePlayers();\n    }\n  \n    addOtherPlayer(conn: any) {\n      this.db.addNode(conn);\n      this.others.push(new OtherPlayer(conn.peer, this.db));\n      //this.updatePlayers();\n    }\n\n    get currentPlayerName(): string|undefined {\n      return this.db.get('currentPlayer', 'name');\n    }\n\n    shuffleStartPlayer() {\n      let idx = Math.floor(Math.random() * (this.others.length + 1));\n      if (idx === 0) {\n        this.setCurrentPlayer(this.myself.name);\n      } else {\n        this.setCurrentPlayer(this.others[idx - 1].name);\n      }\n    }\n\n    nextPlayer() {\n      this.ensurePlayersSorted();\n      let withLargerNumber = this.others.filter(x => x.orderNumber > this.myself.orderNumber);\n      if (withLargerNumber.length > 0) {\n        this.setCurrentPlayer(withLargerNumber[0].name);\n      } else if (this.others.length === 0) {\n        this.setCurrentPlayer(this.myself.name);\n      } else {\n        this.setCurrentPlayer(this.others[0].name);\n      }\n    }\n\n    get allPlayers(): PlayerData[] {\n      let ret = [this.myself, ...this.others];\n      ret.sort((a, b) => a.orderNumber - b.orderNumber);\n      return ret;\n    }\n\n    private ensurePlayersSorted() {\n      this.others.sort((a, b) => a.orderNumber - b.orderNumber);\n    }\n\n    setCurrentPlayer(name: string) {\n      this.db.put('currentPlayer', 'name', name);\n      this.sendMessageRaw({color: 'black', tc: curTime() + ' ' + name + ' ist am Zug', tr: ''});\n    }\n  \n    updatePlayer(id: string) {\n      this.ensurePlayersSorted();\n      this.others.find(p => p.id === id)?.notifyUpdate();\n    }\n  \n    sendMessage(msg: string) {\n      this.sendMessageRaw(this.myself.makeColored(curTime() + ' ' + this.myself.name, msg));\n    }\n  \n    sendMessageRaw(msg: MsgData) {\n      this.db.add('messages', msg);\n    }\n  \n       increaseLifes() {\n        this.myself.changeLifeCount(1);\n       }\n       \n       decreaseLifes() {\n        this.myself.changeLifeCount(-1);\n       }\n       \n    modifyOtherCard(modifierCardId: number, targetId: number) {\n      if (this.myself.hasCard(targetId)) {\n        this.myself.modifyOwnCard(modifierCardId, targetId);\n      } else {\n        this.others.forEach(p => {\n          if (p.hasCard(targetId)) {\n            this.myself.modifyOtherPlayersCard(modifierCardId, targetId, p.id);\n          }\n        });\n      }\n    }\n  }\n\nfunction curTime(): string {\n  return new Date().toLocaleTimeString('de-DE', {hour: '2-digit', minute:'2-digit'});\n}\n\nexport { GameField, Card, CardType };\n","import { Component, Input, OnInit } from '@angular/core';\nimport { CardCollection, CardType } from '../domain/game-field';\nimport { HoveredCardService } from '../hovered-card.service';\n\n@Component({\n  selector: 'mrn-card-collection',\n  templateUrl: './card-collection.component.html',\n  styleUrls: ['./card-collection.component.scss']\n})\nexport class CardCollectionComponent implements OnInit {\n\n  @Input()\n  public name: string = 'coll';\n\n  @Input()\n  public collection!: CardCollection;\n\n  @Input()\n  public act: string = '';\n\n  @Input()\n  public collapsed: boolean = false;\n\n  constructor(private hc: HoveredCardService) { }\n\n  ngOnInit(): void {\n  }\n\n  cardCombined() {\n    let counts: Map<string, number> = new Map();\n    this.collection.cards.forEach(c => {\n      if (counts.has(c.name)) {\n        counts.set(c.name, counts.get(c.name) as number + 1);\n      } else {\n        counts.set(c.name, 1);\n      }\n    });\n    let types: CardType[] = [];\n    this.collection.cards.forEach(c => {\n      if (types.indexOf(c.type) < 0) {\n        types.push(c.type);\n      }\n    });\n    return types\n      .map(n => {\n        if (counts.get(n.name) as number > 1) {\n          return {\n            text: n.name + ' (x' + counts.get(n.name) + ')',\n            type: n\n          } \n        } else {\n          return {\n            text: n.name,\n            type: n\n          } \n        }\n      });\n  }\n\n  hover(c: CardType) {\n    this.hc.setCard(c);\n  }\n\n}\n","<div><span (click)=\"this.collapsed = !this.collapsed\">{{this.name}}: {{this.collection.size}} Karten. </span>\n    <ng-container *ngIf=\"collapsed\">\n        <span *ngFor=\"let c of this.cardCombined(); let i = index\" (mouseover)=\"this.hover(c.type)\"><ng-container *ngIf=\"i !== 0\">, </ng-container>{{c.text}}</span>\n    </ng-container>\n    <ng-container *ngIf=\"!collapsed\">\n        <br/>\n        <mrn-card *ngFor=\"let c of this.collection\" [card]=\"c\" [act]=\"this.act\"></mrn-card>\n        <ng-container *ngIf=\"this.collection.size === 0\">\n            <br/>\n            <br/>\n        </ng-container>            \n    </ng-container>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { CardBag, CardCollection } from './domain/game-field';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ModalCardCollectionService {\n  public collection: CardCollection = new CardBag([]);\n  public name: string = 'coll';\n  public act: string = '';\n  public isShown: boolean = false;\n  public closed = new Subject();\n\n  constructor() { }\n\n  show(cards: CardCollection, name: string, actions: string) {\n    this.collection = cards;\n    this.name = name;\n    this.act = actions;\n    this.isShown = true;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\n\n@Pipe({\n  name: 'isSafeUrl'\n})\nexport class IsSafeUrlPipe implements PipeTransform {\n\n  constructor(private san: DomSanitizer) {\n  }\n\n  transform(value: string, ...args: unknown[]): SafeUrl {\n    return this.san.bypassSecurityTrustUrl(value);\n  }\n\n}\n","class Database {\n\n    private times: any;\n    private data: any;\n\n  constructor() {\n    this.times = {};\n    this.data = {};\n  }\n\n  put(time: number, id: string, data: any) {\n    if (id in this.times) {\n      let lastTime = this.times[id];\n      if (lastTime < time) {\n        this.times[id] = time;\n        this.data[id] = data;\n        return 'update';\n      } else {\n        return 'ignore';\n      }\n    } else {\n      this.times[id] = time;\n      this.data[id] = data;\n      return 'add';\n    }\n  }\n\n  get(id: string) {\n    return this.data[id];\n  }\n\n  dumpEntries(conn: any, databaseName: string, sender: string, knownReceivers: string[]) {\n      let _this = this;\n    Object.keys(this.times).forEach(function (id) {\n      let packet = {\n        src: sender,\n        t: _this.times[id],\n        rcv: knownReceivers,\n        db: databaseName,\n        id: id,\n        dta: _this.data[id]\n      };\n      conn.send(packet);\n      console.log('dump ' + JSON.stringify(packet) + ' to ' + conn.peer);\n    });\n  }\n}\n\nexport class DistributedDatabaseSystem {\n  private peer: any;\n  private ownName: string;\n  private time: number;\n  private otherNames: string[];\n  private others: any[];\n  private callbacks: any;\n  private databases: any;\n\n  constructor(peer: any, ownName: string) {\n    this.peer = peer;\n    this.ownName = ownName;\n    this.time = 0;\n    this.otherNames = [];\n    this.others = [];\n    this.callbacks = {add: {}, update: {}, ignore: {}, receiveCommand: {}};\n    this.databases = {};\n  }\n\n  connectToNode(id: string) {\n    var conn = this.peer.connect(id, {reliable: true});\n    this.addNode(conn);\n  }\n\n  addNode(conn: any) {\n    this.otherNames.push(conn.peer);\n    this.others.push(conn);\n    var _this = this;\n    conn.on('data', function(d: any) {\n      _this.handleData(d);\n    });\n    conn.on('open', function(d: any) {\n      _this.dumpDatabasesTo(conn);\n    });\n  }\n\n  private dumpDatabasesTo(conn: any) {\n    for (let [name, db] of Object.entries(this.databases)) {\n      (db as Database).dumpEntries(conn, name, this.ownName, this.otherNames);\n    }\n  }\n\n  private handleData(d: any) {\n    console.log('received: ' + JSON.stringify(d));\n    if (d.cmd) {\n      this.handleCommand(d);\n      return;\n    }\n    this.time = Math.max(this.time, d.t);\n    this.ensureDbExists(d.db);\n    let eventType = this.databases[d.db].put(d.t, d.id, d.dta);\n    if (this.callbacks[eventType][d.db]) {\n      this.callbacks[eventType][d.db](d.id, d.dta);\n    }\n    if (eventType != 'ignore') {\n      this.forwardToFurtherReceivers(d);\n    }\n    this.establishConnectionToUnknownNodes(d);\n  }\n\n  private handleCommand(d: any) {\n    if (this.callbacks['receiveCommand'][d.cmd]) {\n      this.callbacks['receiveCommand'][d.cmd](d.dta);\n    }\n  }\n\n  private ensureDbExists(dbName: string) {\n    if (!this.databases[dbName]) {\n      this.databases[dbName] = new Database();\n    }\n  }\n\n  private forwardToFurtherReceivers(packet: any) {\n    let furtherReceivers: string[] = [];\n    let existingSet = new Set(packet.rcv);\n    existingSet.add(this.ownName);\n    existingSet.add(packet.src);\n    this.otherNames.forEach(function (x) {\n      if (!existingSet.has(x)) {\n        furtherReceivers.push(x);\n      }\n    });\n    packet.rcv.push(...furtherReceivers);\n    let _this = this;\n    furtherReceivers.forEach(function(id) {\n      let index = _this.otherNames.indexOf(id);\n      let conn = _this.others[index];\n      conn.send(packet)\n    });\n  }\n\n  private establishConnectionToUnknownNodes(packet: any) {\n    let _this = this;\n    let nameSet = new Set(this.otherNames);\n    nameSet.add(this.ownName);\n    packet.rcv.filter((x: string) => !nameSet.has(x)).forEach(function (x: string) {\n      _this.connectToNode(x);\n    });\n    if (!nameSet.has(packet.src)) {\n      this.connectToNode(packet.src);\n    }\n  }\n\n  add(listDb: string, data: any) {\n    this.put(listDb, this.ownName + this.time, data);\n  }\n\n  put(database: string, id: string, data: any) {\n    var packet = {\n      src: this.ownName,\n      t: this.time++,\n      rcv: this.otherNames,\n      db: database,\n      id: id,\n      dta: data\n    };\n    this.others.forEach(function(x: any) {\n      x.send(packet);\n    })\n    this.handleData(packet);\n  }\n\n  get(database: string, id: string) {\n    if (!this.databases[database]) {\n      return undefined;\n    }\n    return this.databases[database].get(id);\n  }\n\n  on(eventType: string | string[], database: string, action: Function) {\n    if (typeof eventType !== 'string') {\n      eventType.forEach(x => this.on(x, database, action));\n    } else {\n      this.callbacks[eventType][database] = action;\n    }\n  }\n\n  sendCommandTo(receiverId: string, command: string, data: any) {\n    let idx = this.otherNames.indexOf(receiverId);\n    this.others[idx].send({\n      cmd: command,\n      dta: data\n    });\n  }\n\n}\n\n","import { ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { CardBag, CardStash, OtherPlayer } from '../domain/game-field';\nimport { GameFieldStoreService } from '../game-field-store.service';\n\n@Component({\n  selector: 'mrn-other-player',\n  templateUrl: './other-player.component.html',\n  styleUrls: ['./other-player.component.scss']\n})\nexport class OtherPlayerComponent implements OnInit {\n\n  @Input()\n  public me!: OtherPlayer;\n\n  private destroy = new Subject<void>();\n\n  constructor(private field: GameFieldStoreService, private cdr: ChangeDetectorRef) { }\n\n  ngOnInit(): void {\n    this.me.subscribeForUpdate(() => this.cdr.detectChanges(), this.destroy);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy.next();\n  }\n\n  get name(): string {\n    return this.me.name;\n  }\n\n  get id(): string {\n    return this.me.id;\n  }\n\n  get lifes(): number {\n    return this.me.lifes;\n  }\n\n  get handSize(): number {\n    return this.me.handSize;\n  }\n\n  get librarySize(): number {\n    return this.me.librarySize;\n  }\n\n  get table(): CardBag {\n    return this.me.table;\n  }\n\n  get graveyard(): CardStash {\n    return this.me.graveyard;\n  }\n\n  isCurrentPlayer(): boolean {\n    return this.field.gameField.currentPlayerName === this.me.name;\n  }\n\n}\n","<fieldset id=\"{{id}}\">\n    <legend [class.turn]=\"isCurrentPlayer()\">{{name}} ({{id}})</legend>\n    {{lifes}} Lebenspunkte, {{handSize}} Handkarten, {{librarySize}} Karten in der Bibliothek<br/>\n    <mrn-card-collection [collection]=\"this.table\" name=\"Ausgelegt\"></mrn-card-collection>\n    <mrn-card-collection [collection]=\"this.graveyard\" name=\"Friedhof\" [collapsed]=\"true\"></mrn-card-collection>\n</fieldset>\n","import { HttpClient } from '@angular/common/http';\nimport { ChangeDetectorRef, Component } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { GameField, Card, CardType, OtherPlayer } from './domain/game-field';\nimport { GameFieldStoreService } from './game-field-store.service';\n\ndeclare var Peer: any;\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'mrnOnline';\n\n  public state: string = 'initial';\n\n  public formData = {\n    playerName: localStorage.getItem('mrnUserName'),\n    deckUrl: './assets/stubData.json'\n  } \n\n  private destroy = new Subject();\n\n  constructor(public fieldService: GameFieldStoreService, private http: HttpClient, cdr: ChangeDetectorRef) {\n    fieldService.subscribe(\n      f => f.registerPlayerChangeHandler(() => {cdr.detectChanges()}),\n      this.destroy);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy.next();\n  }\n\n  createPeer(name: string) {\n    //var peer = new Peer(undefined, {host: 'localhost', port: 9000, key: 'peerjs', debug: 2});\n    var peer = new Peer(undefined, {});\n    peer.on('error', (err: any) => {\n        console.log(err);\n        alert('' + err);\n    });\n    peer.on('open', (id: string) => {\n        //alert('My peer ID is: ' + id);\n        this.loadDeckAndStart(peer, id);\n    });\n    peer.on('connection', (conn: any) => {\n        //alert('Got connection ' + conn);\n        this.fieldService.gameField.addOtherPlayer(conn);\n    });\n}\n\nprivate loadDeckAndStart(peer: any, playerId: string) {\n  this.http.get(this.formData.deckUrl).subscribe((data: any) => {\n    let deck: Card[] = this.mapDecksAndCards(data, playerId);\n    console.log('loaded deck with ' + deck.length + ' cards');\n    this.fieldService.init(new GameField(peer, playerId, this.formData.playerName as string, deck));\n    this.state = 'started';\n  });\n}\n\nstart() {\n  let name = this.formData.playerName;\n  if (name) {\n    localStorage.setItem('mrnUserName', name);\n    this.createPeer(name);\n  }\n}\n\nmapDecksAndCards(data: any, peerId: string): Card[] {\n  let cards: any = {};\n  for (let i = 0; i < data.cards.length; i++) {\n    let card = data.cards[i];\n    cards[card.name] = new CardType(card.name, card.img);\n  }\n  let d: string[] = data.deck;\n  let deck = [];\n  for (let i = 0; i < d.length; i++) {\n    let card = d[i];\n    deck.push(new Card(cards[card], peerId));\n  }\n  return deck;\n}\n\njoin() {\n    var other = prompt('ID des Mitspielers');\n    if (other) {\n      this.fieldService.gameField.connectToOtherPlayer(other);\n      this.state = 'joined';\n    }\n}\n\nwaitForOthers() {\n  this.state = 'joined';\n}\n\ndice(sides: number) {\n  let n = Math.floor(Math.random() * sides) + 1;\n  this.fieldService.gameField.myself.sendNotification('würfelt ' + n + ' (von ' + sides + ')');\n}\n\nisOwnTurn(): boolean {\n  return this.fieldService.gameField.currentPlayerName === this.fieldService.gameField.myself.name;\n}\n\nget otherPlayers(): OtherPlayer[] {\n  return this.fieldService.gameField.others;\n}\n\n}\n","<ng-container *ngIf=\"state === 'initial'\">\n    <form>\n        <table>\n            <tr>\n                <td>Spieler</td>\n                <td><input type=\"text\" name=\"playerName\" [(ngModel)]=\"this.formData.playerName\" /></td>\n            </tr>\n            <tr>\n                <td>Deck-URL</td>\n                <td><input type=\"text\" name=\"deckUrl\" [(ngModel)]=\"this.formData.deckUrl\" /></td>\n            </tr>\n        </table>\n        <button (click)=\"this.start()\">Start ...</button>\n    </form>\n</ng-container>\n<ng-container *ngIf=\"state === 'started'\">\n    <button (click)=\"this.waitForOthers()\">Neues Spiel starten</button>\n    <button (click)=\"this.join()\">Existierendem Spiel beitreten ...</button>\n</ng-container>\n<ng-container *ngIf=\"state === 'joined'\">\n    <div class=\"grid-parent\">\n        <div class=\"grid-top\">\n            <button *ngIf=\"!fieldService.gameField.currentPlayerName\" (click)=\"fieldService.gameField.shuffleStartPlayer()\">Zufälligen Startspieler wählen</button>\n            <button *ngIf=\"isOwnTurn()\" (click)=\"fieldService.gameField.nextPlayer()\">Zug beenden</button>\n            <ng-container *ngFor=\"let p of fieldService.gameField.allPlayers\">&nbsp;<a href=\"#{{p.id}}\" [style.background-color]=\"p.color\" class=\"playerLink\" [class.activePlayer]=\"fieldService.gameField.currentPlayerName === p.name\"> {{p.name}} </a></ng-container>\n            &nbsp; <button (click)=\"dice(6)\">Würfel 6</button><button (click)=\"dice(10)\">Würfel 10</button><button (click)=\"dice(20)\">Würfel 20</button>\n        </div>\n        <div class=\"grid-center\">\n            <mrn-self-player></mrn-self-player>\n            \n            <mrn-other-player *ngFor=\"let p of otherPlayers\" [me]=\"p\"></mrn-other-player>            \n        </div>\n        <div class=\"grid-right\">\n            <mrn-card-details></mrn-card-details>   \n            <mrn-chat-box></mrn-chat-box>                             \n        </div>\n    </div>    \n    <mrn-modal-card-collection #mcc></mrn-modal-card-collection>\n</ng-container>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ChatBoxComponent } from './chat-box/chat-box.component';\nimport { SelfPlayerComponent } from './self-player/self-player.component';\nimport { CardComponent } from './card/card.component';\nimport { OtherPlayerComponent } from './other-player/other-player.component';\nimport { CardCollectionComponent } from './card-collection/card-collection.component';\nimport { CardDetailsComponent } from './card-details/card-details.component';\nimport { ModalCardCollectionComponent } from './modal-card-collection/modal-card-collection.component';\nimport { FormsModule } from '@angular/forms';\nimport { IsSafeUrlPipe } from './is-safe-url.pipe';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ChatBoxComponent,\n    SelfPlayerComponent,\n    CardComponent,\n    OtherPlayerComponent,\n    CardCollectionComponent,\n    CardDetailsComponent,\n    ModalCardCollectionComponent,\n    IsSafeUrlPipe\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, NextObserver, Observable, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { GameField } from './domain/game-field';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GameFieldStoreService {\n\n  public store: BehaviorSubject<GameField | undefined> = new BehaviorSubject<GameField | undefined>(undefined);\n\n  public get gameField(): GameField {\n    return this.store.getValue() as GameField;\n  }\n\n  public init(f: GameField): void {\n    this.store.next(f);\n  }\n\n  public subscribe(handler: (f:GameField) => void, destroy: Subject<any>): void {\n    this.store\n      .pipe(takeUntil(destroy))\n      .subscribe(x => {\n        if (x) {\n          handler(x);\n        }\n      });\n  }\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { CardType } from '../domain/game-field';\nimport { HoveredCardService } from '../hovered-card.service';\n\n@Component({\n  selector: 'mrn-card-details',\n  templateUrl: './card-details.component.html',\n  styleUrls: ['./card-details.component.scss']\n})\nexport class CardDetailsComponent implements OnInit {\n\n  public current: CardType;\n\n  private destroy = new Subject();\n\n  constructor(private hc: HoveredCardService) { \n    this.current = new CardType('MRN', 'https://c1.scryfall.com/file/scryfall-cards/normal/front/a/9/a9f9c279-e382-4feb-9575-196e7cf5d7dc.jpg?1562799139');\n    this.hc.subscribe(t => this.current = t, this.destroy);\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngOnDestroy(): void {\n    this.destroy.next();\n  }\n\n}\n","<img id=\"largeCard\" src=\"{{current.img}}\" title=\"{{current.name}}\" width=\"240px\" />\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { CardType } from './domain/game-field';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HoveredCardService {\n\n  public store: Subject<CardType> = new Subject<CardType>();\n\n  public setCard(c: CardType): void {\n    this.store.next(c);\n  }\n\n  public subscribe(handler: (c:CardType) => void, destroy: Subject<any>): void {\n    this.store\n      .pipe(takeUntil(destroy))\n      .subscribe(handler);\n  }\n\n  constructor() { }\n}\n","import { ChangeDetectorRef, Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { CardActionModeService } from '../card-action-mode.service';\nimport { Card, CardBag, GameField } from '../domain/game-field';\nimport { GameFieldStoreService } from '../game-field-store.service';\nimport { HoveredCardService } from '../hovered-card.service';\nimport { ModalCardCollectionService } from '../modal-card-collection.service';\n\n@Component({\n  selector: 'mrn-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.scss']\n})\nexport class CardComponent implements OnInit {\n\n  @Input()\n  public card!: Card;\n\n  @Input()\n  public act: string = '';\n\n  public large: boolean = false;\n\n  private destroy = new Subject();\n\n  constructor(\n    private field: GameFieldStoreService, \n    private hc: HoveredCardService,\n    private mode: CardActionModeService,\n    private cdr: ChangeDetectorRef,\n    private mcc: ModalCardCollectionService) {\n\n    mode.subscribe(() => cdr.detectChanges(), this.destroy);\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngOnDestroy(): void {\n    this.destroy.next();\n  }\n\n  get gameField(): GameField {\n    return this.field.gameField;\n  }\n\n  hover(c: Card) {\n    this.hc.setCard(c.type);\n  }\n\n  modifyOtherCard(cardId: number) {\n    this.mode.selectForModify(cardId);\n  }\n\n  get isModifyMode(): boolean {\n    return this.mode.isModifyMode;\n  }\n\n  setCounter(card: Card) {\n    let value = prompt('Counter-Wert', card.counter);\n    if (value === null) {\n      return;\n    }\n    if (value === '') {\n      this.gameField.myself.setCounter(card.id, undefined);\n    } else {\n      this.gameField.myself.setCounter(card.id, value);\n    }\n  }\n\n  modifyTargetSelected(targetId: number) {\n    if (this.mode.savedId !== targetId) {\n      this.gameField.modifyOtherCard(this.mode.savedId, targetId);\n    }\n    this.mode.normalMode();\n  }\n\n  openStack() {\n    let cards = new CardBag(this.card.modifiers);\n    this.mcc.show(cards, 'Kartendetails', this.intersectActions(['HA', 'GR', 'EX', 'PL']));\n  }\n\n  private intersectActions(otherActions: string[]): string {\n    return otherActions\n      .filter(s => this.act.indexOf(s) >= 0)\n      .join(',');\n  }\n\n}\n","<div class=\"dropdown\">\n  <div [class.tapped]=\"card.tapped\" [class.blocker]=\"card.markedAsBlocker\" class=\"cardStack\" >\n    <img *ngFor=\"let m of card.reversedModifiers\" class=\"card\" (mouseover)=\"this.hover(m)\" [src]=\"m.img | isSafeUrl\" title=\"{{m.name}}\" />\n    <img class=\"card\" (mouseover)=\"this.hover(card)\" [src]=\"card.img | isSafeUrl\" title=\"{{card.name}}\" />\n    <div *ngIf=\"card.counter\" class=\"counter\">{{card.counter}}</div>\n  </div>\n  <div class=\"dropdown-content\">\n    <ng-container *ngIf=\"!isModifyMode\">\n      <a *ngIf=\"act.includes('TA') && !card.tapped\" (click)=\"gameField.myself.tap(card.id)\">tappen</a>\n      <a *ngIf=\"act.includes('BL') && card.normal\" (click)=\"gameField.myself.markAsBlocker(card.id)\">als Blocker markieren</a>\n      <a *ngIf=\"act.includes('UT') && !card.normal\" (click)=\"gameField.myself.untap(card.id)\">enttappen</a>\n      <a *ngIf=\"act.includes('PL')\" (click)=\"gameField.myself.putIntoPlay(card.id)\">ins Spiel bringen</a>\n      <a *ngIf=\"act.includes('PT')\" (click)=\"gameField.myself.putIntoPlayTapped(card.id)\">getappt ins Spiel bringen</a>\n      <a *ngIf=\"act.includes('MO') && !card.isModified\" (click)=\"modifyOtherCard(card.id)\">auf andere Karte legen</a>\n      <a *ngIf=\"act.includes('CO')\" (click)=\"setCounter(card)\">Counter setzen</a>\n      <a *ngIf=\"act.includes('GR')\" (click)=\"gameField.myself.putToGraveyard(card.id)\">auf Friedhof legen</a>\n      <a *ngIf=\"act.includes('EX')\" (click)=\"gameField.myself.putToExile(card.id)\">ganz aus dem Spiel nehmen</a>\n      <a *ngIf=\"act.includes('DR')\" (click)=\"gameField.myself.drawCard(card.id)\">ziehen</a>\n      <a *ngIf=\"act.includes('HA') && !card.type.token\" (click)=\"gameField.myself.putToHand(card.id)\">zurück auf die Hand nehmen</a>  \n      <a *ngIf=\"act.includes('LI') && !card.type.token\" (click)=\"gameField.myself.putOnLibrary(card.id)\">oben auf Bibliothek legen</a>  \n      <a *ngIf=\"card.isModified\" (click)=\"openStack()\">Einzelkarten auffächern</a>  \n    </ng-container>\n    <ng-container *ngIf=\"isModifyMode\">\n      <a (click)=\"modifyTargetSelected(card.id)\">als Ziel auswählen</a>  \n    </ng-container>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}