{"version":3,"sources":["./src/app/self-player/self-player.component.ts","./src/app/self-player/self-player.component.html","./src/app/chat-box/chat-box.component.ts","./src/app/chat-box/chat-box.component.html","./src/environments/environment.ts","./src/app/domain/game-field.ts","./src/app/card-collection/card-collection.component.ts","./src/app/card-collection/card-collection.component.html","./src/app/domain/distributed-database.ts","./src/app/other-player/other-player.component.ts","./src/app/other-player/other-player.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/game-field-store.service.ts","./src/app/card/card.component.ts","./src/app/card/card.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { CardBag, CardStash, GameField } from '../domain/game-field';\nimport { GameFieldStoreService } from '../game-field-store.service';\n\n@Component({\n  selector: 'mrn-self-player',\n  templateUrl: './self-player.component.html',\n  styleUrls: ['./self-player.component.scss']\n})\nexport class SelfPlayerComponent implements OnInit {\n\n  constructor(private field: GameFieldStoreService, private cdr: ChangeDetectorRef) {\n    field.subscribe((f: GameField) => f.myself.subscribeForUpdate(() => cdr.markForCheck()));\n  }\n\n  ngOnInit(): void {\n  }\n\n  get name(): string {\n    return this.field.gameField.myself.name;\n  }\n\n  get id(): string {\n    return this.field.gameField.myself.id;\n  }\n\n  get gameField(): GameField {\n    return this.field.gameField;\n  }\n\n  librarySize(): number {\n    return this.field.gameField.myself.library.size;\n  }\n\n  get lifes(): number {\n    return this.field.gameField.myself.lifes;\n  }\n\n  get hand(): CardBag {\n    return this.field.gameField.myself.hand;\n  }\n\n  get table(): CardBag {\n    return this.field.gameField.myself.table;\n  }\n\n  get graveyard(): CardStash {\n    return this.field.gameField.myself.graveyard;\n  }\n\n  drawCard() {\n    this.field.gameField.drawCard();\n  }\n\n  decreaseLifes() {\n    this.field.gameField.decreaseLifes();\n  }\n\n  increaseLifes() {\n    this.field.gameField.increaseLifes();\n  }\n\n  multiLifeDecrease() {\n    let count = prompt('Anzahl verlorener Leben');\n    if (count) {\n      this.field.gameField.myself.changeLifeCount(-Number.parseInt(count));\n    }\n  }\n\n  multiLifeIncrease() {\n    let count = prompt('Anzahl zusätzlicher Leben');\n    if (count) {\n      this.field.gameField.myself.changeLifeCount(Number.parseInt(count));\n    }\n  }\n\n  isCurrentPlayer(): boolean {\n    return this.field.gameField.currentPlayerName === this.field.gameField.myself.name;\n  }\n\n}\n","<fieldset>\n<legend [class.turn]=\"isCurrentPlayer()\"><b>{{name}}</b> (ID: {{id}})</legend>\n    <mrn-card-collection [collection]=\"this.hand\" name=\"Hand\" [act]=\"'PL,PT,GR'\"></mrn-card-collection>\n    <mrn-card-collection [collection]=\"this.table\" name=\"Ausgelegt\" [act]=\"'TA,UT,GR'\"></mrn-card-collection>\n    <div>Bibliothek: {{this.librarySize()}} Karten. <button (click)=\"this.drawCard()\">Karte ziehen</button></div>\n    <mrn-card-collection [collection]=\"this.graveyard\" name=\"Friedhof\" [act]=\"'PL,PT'\" [collapsed]=\"true\"></mrn-card-collection>\n    <div>Lebenspunkte: {{this.lifes}}\n        <button (click)=\"this.increaseLifes()\">+</button>\n        <button (click)=\"this.decreaseLifes()\">-</button>\n        <button (click)=\"this.multiLifeIncrease()\">+X ...</button>\n        <button (click)=\"this.multiLifeDecrease()\">-X ...</button>\n    </div>\n</fieldset>","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, Output } from '@angular/core';\nimport { GameField, MsgData } from '../domain/game-field';\nimport { GameFieldStoreService } from '../game-field-store.service';\n\n@Component({\n  selector: 'mrn-chat-box',\n  templateUrl: './chat-box.component.html',\n  styleUrls: ['./chat-box.component.scss']\n})\nexport class ChatBoxComponent implements OnInit {\n\n  public messages: MsgData[] = [];\n\n  constructor(private field: GameFieldStoreService, private cdr: ChangeDetectorRef) { \n    field.subscribe(gf => gf.registerMessageHandler((id: undefined, msg: any) => this.handleAddedMessage(msg)));\n  }\n\n  ngOnInit(): void {\n  }\n\n  handleAddedMessage(msg: MsgData) {\n    this.messages.push(msg);\n    this.cdr.detectChanges();\n    this.scrollToBottom();\n  }\n\n  scrollToBottom() {\n    let elem = document.getElementById('chatbox');\n    if (elem) {\n      elem.scrollTop = elem.scrollHeight;\n    }\n  }\n\nsendMessage(): void {\n      var message = prompt('Nachricht');\n      if (message) {\n        (window.mrnOnline.gameField as GameField).sendMessage(message);\n      }\n  }\n\n}\n","<fieldset>\n<legend>Chat</legend>\n<button (click)=\"this.sendMessage()\">Schreiben ...</button>\n<div class=\"chatbox\" id=\"chatbox\">\n    <div *ngFor=\"let m of messages\">\n        <ng-container *ngIf=\"m.tr === ''\">\n            <span [style.color]=\"m.color\">{{m.tc}}</span>\n        </ng-container>\n        <ng-container *ngIf=\"m.tr !== ''\">\n            <span [style.color]=\"m.color\">{{m.tc}}: </span>{{m.tr}}\n        </ng-container>\n    </div>\n</div>\n</fieldset>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Subject } from 'rxjs';\nimport { DistributedDatabaseSystem } from './distributed-database';\n\nclass CardType {\n    constructor(public name: string, public img: string) {\n    }\n  \n    toDto() {\n      return {\n        name: this.name,\n        img: this.img\n      };\n    }\n  }\n  \n  function cardTypeFromDto(dto: any) {\n    return new CardType(dto.name, dto.img);\n  }\n  \n  var cardCnt = 0;\n  \n  class Card {\n\n    public type: CardType;\n    public id: number;\n    public tapped: boolean;\n  \n    constructor(type: CardType, id?: number, tapped?: boolean) {\n      this.type = type;\n      if (typeof id === 'undefined') {\n        this.id = Math.floor(Math.random() * 10000) * 1000 + cardCnt++;\n      } else {\n        this.id = id;\n      }\n      if (typeof tapped === 'undefined') {\n        this.tapped = false;\n      } else {\n        this.tapped = tapped;\n      }\n    }\n  \n    tap() {\n      this.tapped = true;\n    }\n  \n    untap() {\n      this.tapped = false;\n    }\n  \n    get name() {\n      return this.type.name;\n    }\n\n    get img() {\n      return this.type.img;\n    }\n  \n    toDto() {\n      return {\n        id: this.id,\n        type: this.type.toDto(),\n        tapped: this.tapped\n      }\n    }\n  }\n\n  interface DtoCardType {\n\n  }\n\n  interface DtoCard {\n      type: DtoCardType;\n      id: number;\n      tapped: boolean;\n  }\n  \n  function cardFromDto(dto: DtoCard) {\n    return new Card(cardTypeFromDto(dto.type), dto.id, dto.tapped);\n  }\n  \n  export abstract class CardCollection implements Iterable<Card> {\n    constructor(public cards: Card[]) {\n    }\n\n    [Symbol.iterator](): Iterator<Card, any, undefined> {\n      return this.cards[Symbol.iterator]();\n    }\n\n    abstract add(card: Card): void;\n  \n    contains(cardId: number) {\n      for (let i = 0; i < this.cards.length; i++) {\n        if (this.cards[i].id === cardId) {\n          return true;\n        }\n      }\n      return false;\n    }\n  \n    getById(cardId: number) {\n      for (let i = 0; i < this.cards.length; i++) {\n        if (this.cards[i].id === cardId) {\n          return this.cards[i];\n        }\n      }\n      return null;\n    }\n  \n    remove(cardId: number) {\n      for (let i = 0; i < this.cards.length; i++) {\n        if (this.cards[i].id === cardId) {\n          let card = this.cards[i];\n          this.cards.splice(i, 1);\n          return card;\n        }\n      }\n      return null;\n    }\n  \n    get size() {\n      return this.cards.length;\n    }\n  \n    toDto() {\n      return this.cards.map(x => x.toDto());\n    }\n  }\n  \n  export class CardStash extends CardCollection {\n    constructor(cards: Card[]) {\n      super(cards);\n    }\n  \n    add(card: Card): void {\n      this.cards.push(card);\n    }\n  \n    shuffle() {\n      var currentIndex = this.cards.length;\n      var temporaryValue;\n      var randomIndex;\n  \n      // While there remain elements to shuffle...\n      while (0 !== currentIndex) {\n  \n        // Pick a remaining element...\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex -= 1;\n  \n        // And swap it with the current element.\n        temporaryValue = this.cards[currentIndex];\n        this.cards[currentIndex] = this.cards[randomIndex];\n        this.cards[randomIndex] = temporaryValue;\n      }\n    }\n  \n    draw() {\n      return this.cards.shift();\n    }\n  }\n  \n  export class CardBag extends CardCollection {\n    constructor(cards: Card[]) {\n      super(cards);\n    }\n\n    add(card: Card): void {\n      let idx = this.cards.findIndex(x => x.type.name === card.type.name);\n      if (idx < 0) {\n        this.cards.push(card);\n      } else {\n        this.cards.splice(idx, 0, card);\n      }\n    }\n  \n  }\n  \n  class SelfPlayer {\n      public id: string;\n      public name: string;\n      public library: CardStash;\n      public hand: CardBag;\n      public table: CardBag;\n      public graveyard: CardStash;\n      public lifes: number;\n      public color: string;\n      public db: DistributedDatabaseSystem;\n      private subject: Subject<void> = new Subject();\n\n    constructor(id: string, name: string, deck: Card[], db: DistributedDatabaseSystem) {\n      this.id = id;\n      this.name = name;\n      this.db = db;\n      this.library = new CardStash(deck);\n      this.library.shuffle();\n      this.hand = new CardBag([]);\n      this.table = new CardBag([]);\n      this.graveyard = new CardStash([]);\n      this.db.put('graveyards', this.id, this.graveyard.toDto());\n      this.lifes = 20;\n      this.db.put('lifes', this.id, this.lifes);\n      this.color = 'hsl(' + (Math.floor(Math.random() * 72) * 5) + ',90%,40%)';\n    }\n  \n    subscribeForUpdate(arg0: () => void): void {\n      this.subject.subscribe(arg0);\n    }\n\n    makeColored(tc: string, tr: string): MsgData {\n        return {\n            color: this.color,\n            tc: tc,\n            tr: tr\n        }\n    }\n  \n    drawCard() {\n      let c = this.library.draw();\n      if (!c) {\n        this.sendNotification('kann nicht ziehen');\n        return;\n      }\n      this.hand.add(c);\n      this.sendNotification('zieht eine Karte');\n      this.subject.next();\n    }\n  \n    changeLifeCount(diff: number) {\n      this.lifes += diff;\n      this.db.put('lifes', this.id, this.lifes);\n      if (diff > 0) {\n        this.sendNotification('erhöht Lebenspunkte um ' + diff + ' auf ' + this.lifes);\n      } else {\n        this.sendNotification('verringert Lebenspunkte um ' + -diff + ' auf ' + this.lifes);\n      }\n      this.subject.next();\n    }\n  \n    putToGraveyard(cardId: number) {\n      let coll = this.getContainingCollection(cardId);\n      let card = this.removeFromCollection(coll, cardId);\n      card.untap();\n      this.graveyard.add(card);\n      this.db.put('graveyards', this.id, this.graveyard.toDto());\n      this.sendNotification('legt ' + card.name + ' auf Friedhof');\n      this.subject.next();\n    }\n  \n    putIntoPlay(cardId: number) {\n      let coll = this.getContainingCollection(cardId);\n      let card = this.removeFromCollection(coll, cardId);\n      this.addToTable(card);\n      this.sendNotification('spielt ' + card.name + ' aus');\n      this.subject.next();\n    }\n  \n    putIntoPlayTapped(cardId: number) {\n      let collData = this.getContainingCollection(cardId);\n      let card = this.removeFromCollection(collData, cardId);\n      card.tap();\n      this.addToTable(card);\n      this.sendNotification('spielt ' + card.name + ' getappt aus');\n      this.subject.next();\n    }\n  \n    private removeFromCollection(collData: any, cardId: number) {\n      let card = collData.obj.remove(cardId);\n      if (collData.countOnly) {\n        this.db.put(collData.name, this.id, collData.obj.size);\n      } else {\n        this.db.put(collData.name, this.id, collData.obj.toDto());\n      }\n      return card;\n    }\n  \n    addToTable(card: Card) {\n      this.table.add(card);\n      this.db.put('tables', this.id, this.table.toDto());\n      this.subject.next();\n    }\n  \n    getContainingCollection(cardId: number) {\n      if (this.hand.contains(cardId)) {\n        return {obj: this.hand, name: 'handSizes', countOnly: true};\n      }\n      if (this.table.contains(cardId)) {\n        return {obj: this.table, name: 'tables', countOnly: false};\n      }\n      if (this.graveyard.contains(cardId)) {\n        return {obj: this.graveyard, name: 'graveyards', countOnly: false};\n      }\n      if (this.library.contains(cardId)) {\n        return {obj: this.library, name: 'librarySizes', countOnly: true};\n      }\n      return null;\n    }\n  \n    tap(cardId: number) {\n      let card = this.table.getById(cardId);\n      if (!card) {\n        return;\n      }\n      card.tap();\n      this.db.put('tables', this.id, this.table.toDto());\n      this.sendNotification('tappt ' + card.name);\n      this.subject.next();\n    }\n  \n    untap(cardId: number) {\n      let card = this.table.getById(cardId);\n      if (!card) {\n        return;\n      }\n      card.untap();\n      this.db.put('tables', this.id, this.table.toDto());\n      this.sendNotification('enttappt ' + card.name);\n      this.subject.next();\n    }\n  \n    sendNotification(msg: string) {\n      this.db.add('messages', this.makeColored(new Date().toLocaleTimeString('de-DE', {hour: '2-digit', minute:'2-digit'}) + ' ' + this.name + ' ' + msg, ''));\n    }\n  \n  }\n  \n  export class OtherPlayer {\n    private subject: Subject<void> = new Subject();\n\n    constructor(public id: string, public db: DistributedDatabaseSystem) {\n    }\n  \n    get name(): string {\n      return this.db.get('playerNames', this.id);\n    }\n  \n    get lifes(): number {\n      return this.db.get('lifes', this.id);\n    }\n  \n    get graveyard() {\n      return this.getCardStash('graveyards');\n    }\n  \n    get table() {\n      return this.getCardStash('tables');\n    }\n  \n    getCardStash(stashId: string): CardStash {\n      let g: DtoCard[] = this.db.get(stashId, this.id);\n      if (!g) {\n        g = [];\n      }\n      return new CardStash(g.map(x => cardFromDto(x)));\n    }\n\n    notifyUpdate() {\n      console.log('notify update ' + this.id);\n      this.subject.next();\n    }\n  \n    subscribeForUpdate(arg0: () => void) {\n      this.subject.subscribe(arg0);\n    }\n\n  }\n  \n  export interface MsgData {\n      color: string;\n      tc: string;\n      tr: string;\n  }\n  \n  class GameField {\n    private db: DistributedDatabaseSystem;\n    public others: OtherPlayer[];\n    public myself: SelfPlayer;\n  \n    constructor(peer: any, ownId: string, ownName: string) {\n      this.others = [];\n      this.db = new DistributedDatabaseSystem(peer, ownId);\n      this.db.on('add', 'playerNames', (id: string, name: any) => this.updatePlayer(id));\n      this.db.on('update', 'playerNames', (id: string, name: any) => this.updatePlayer(id));\n      this.db.on('update', 'lifes', (id: string, cnt: any) => this.updatePlayer(id));\n      this.db.on('update', 'graveyards', (id: string, cards: any) => this.updatePlayer(id));\n      this.db.on('update', 'tables', (id: string, cards: any) => this.updatePlayer(id));\n  \n      this.myself = new SelfPlayer(ownId, ownName, window.mrnOnline.deck, this.db);\n      this.db.put('playerNames', ownId, ownName);\n    }\n\n    registerMessageHandler(handler: Function) {\n        this.db.on('add', 'messages', handler);\n    }\n  \n    registerPlayerChangeHandler(handler: Function) {\n      this.db.on('add', 'currentPlayer', handler);\n      this.db.on('update', 'currentPlayer', handler);\n  }\n\n  connectToOtherPlayer(id: string) {\n      this.db.connectToNode(id);\n      this.others.push(new OtherPlayer(id, this.db));\n      //this.updatePlayers();\n    }\n  \n    addOtherPlayer(conn: any) {\n      this.db.addNode(conn);\n      this.others.push(new OtherPlayer(conn.peer, this.db));\n      //this.updatePlayers();\n    }\n\n    get currentPlayerName(): string|undefined {\n      return this.db.get('currentPlayer', 'name');\n    }\n\n    shuffleStartPlayer() {\n      let idx = Math.floor(Math.random() * (this.others.length + 1));\n      if (idx === 0) {\n        this.setCurrentPlayer(this.myself.name);\n      } else {\n        this.setCurrentPlayer(this.others[idx - 1].name);\n      }\n    }\n  \n    nextPlayer() {\n      if (this.others.length === 0) {\n        this.setCurrentPlayer(this.myself.name);\n      } else {\n        this.setCurrentPlayer(this.others[0].name);\n      }\n    }\n\n    setCurrentPlayer(name: string) {\n      this.db.put('currentPlayer', 'name', name);\n      this.sendMessageRaw({color: 'black', tc: name + ' ist am Zug', tr: ''});\n    }\n  \n    updatePlayer(id: string) {\n      this.others.find(p => p.id === id)?.notifyUpdate();\n    }\n  \n    sendMessage(msg: string) {\n      this.sendMessageRaw(this.myself.makeColored(new Date().toLocaleTimeString('de-DE', {hour: '2-digit', minute:'2-digit'}) + ' ' + this.myself.name, msg));\n    }\n  \n    sendMessageRaw(msg: MsgData) {\n      this.db.add('messages', msg);\n    }\n  \n    drawCard() {\n        this.myself.drawCard();\n       }\n       \n       increaseLifes() {\n        this.myself.changeLifeCount(1);\n       }\n       \n       decreaseLifes() {\n        this.myself.changeLifeCount(-1);\n       }\n       \n       putToGraveyard(cardId: number) {\n        this.myself.putToGraveyard(cardId);\n       }\n       \n       tap(cardId: number) {\n        this.myself.tap(cardId);\n       }\n       \n       untap(cardId: number) {\n        this.myself.untap(cardId);\n       }\n       \n       putIntoPlay(cardId: number) {\n        this.myself.putIntoPlay(cardId);\n       }\n       \n       putIntoPlayTapped(cardId: number) {\n        this.myself.putIntoPlayTapped(cardId);\n       }   \n    }\n\nexport { GameField, Card, CardType };\ndeclare global {\n    interface MrnOnline {\n        deck: Card[];\n        cards: CardType[];\n        gameField: GameField;\n    }\n    interface MrnOnlineDuringInit {\n        deck: Card[];\n        cards: CardType[];\n        gameField: GameField | undefined;\n    }\n    interface Window { mrnOnline: MrnOnline; mrnData: any}\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { CardCollection } from '../domain/game-field';\n\n@Component({\n  selector: 'mrn-card-collection',\n  templateUrl: './card-collection.component.html',\n  styleUrls: ['./card-collection.component.scss']\n})\nexport class CardCollectionComponent implements OnInit {\n\n  @Input()\n  public name: string = 'coll';\n\n  @Input()\n  public collection!: CardCollection;\n\n  @Input()\n  public act: string = '';\n\n  @Input()\n  public collapsed: boolean = false;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  cardString(): string {\n    let counts: Map<string, number> = new Map();\n    this.collection.cards.forEach(c => {\n      if (counts.has(c.name)) {\n        counts.set(c.name, counts.get(c.name) as number + 1);\n      } else {\n        counts.set(c.name, 1);\n      }\n    });\n    let names: string[] = [];\n    this.collection.cards.forEach(c => {\n      if (names.indexOf(c.name) < 0) {\n        names.push(c.name);\n      }\n    });\n    return names\n      .map(n => {\n        if (counts.get(n) as number > 1) {\n          return n + ' (x' + counts.get(n) + ')';\n        } else {\n          return n;\n        }\n      })\n      .join(\", \");\n  }\n\n}\n","<div><span (click)=\"this.collapsed = !this.collapsed\">{{this.name}}: {{this.collection.size}} Karten.</span>\n    <ng-container *ngIf=\"collapsed\">\n        {{this.cardString()}}\n    </ng-container>\n    <ng-container *ngIf=\"!collapsed\">\n        <br/>\n        <mrn-card *ngFor=\"let c of this.collection\" [card]=\"c\" [act]=\"this.act\"></mrn-card>\n        <ng-container *ngIf=\"this.collection.size === 0\">\n            <br/>\n            <br/>\n        </ng-container>            \n    </ng-container>\n</div>\n","class Database {\n\n    private times: any;\n    private data: any;\n\n  constructor() {\n    this.times = {};\n    this.data = {};\n  }\n\n  put(time: number, id: string, data: any) {\n    if (id in this.times) {\n      let lastTime = this.times[id];\n      if (lastTime < time) {\n        this.times[id] = time;\n        this.data[id] = data;\n        return 'update';\n      } else {\n        return 'ignore';\n      }\n    } else {\n      this.times[id] = time;\n      this.data[id] = data;\n      return 'add';\n    }\n  }\n\n  get(id: string) {\n    return this.data[id];\n  }\n\n  dumpEntries(conn: any, databaseName: string, sender: string, knownReceivers: string[]) {\n      let _this = this;\n    Object.keys(this.times).forEach(function (id) {\n      let packet = {\n        src: sender,\n        t: _this.times[id],\n        rcv: knownReceivers,\n        db: databaseName,\n        id: id,\n        dta: _this.data[id]\n      };\n      conn.send(packet);\n      console.log('dump ' + JSON.stringify(packet) + ' to ' + conn.peer);\n    });\n  }\n}\n\nexport class DistributedDatabaseSystem {\n\n  private peer: any;\n  private ownName: string;\n  private time: number;\n  private otherNames: string[];\n  private others: any;\n  private callbacks: any;\n  private databases: any;\n\n  constructor(peer: any, ownName: string) {\n    this.peer = peer;\n    this.ownName = ownName;\n    this.time = 0;\n    this.otherNames = [];\n    this.others = [];\n    this.callbacks = {add: {}, update: {}, ignore: {}};\n    this.databases = {};\n  }\n\n  connectToNode(id: string) {\n    var conn = this.peer.connect(id, {reliable: true});\n    this.addNode(conn);\n  }\n\n  addNode(conn: any) {\n    this.otherNames.push(conn.peer);\n    this.others.push(conn);\n    var _this = this;\n    conn.on('data', function(d: any) {\n      _this.handleData(d);\n    });\n    conn.on('open', function(d: any) {\n      _this.dumpDatabasesTo(conn);\n    });\n  }\n\n  dumpDatabasesTo(conn: any) {\n    for (let [name, db] of Object.entries(this.databases)) {\n      (db as Database).dumpEntries(conn, name, this.ownName, this.otherNames);\n    }\n  }\n\n  handleData(d: any) {\n    console.log('received: ' + JSON.stringify(d));\n    this.time = Math.max(this.time, d.t);\n    this.ensureDbExists(d.db);\n    let eventType = this.databases[d.db].put(d.t, d.id, d.dta);\n    if (this.callbacks[eventType][d.db]) {\n      this.callbacks[eventType][d.db](d.id, d.dta);\n    }\n    if (eventType != 'ignore') {\n      this.forwardToFurtherReceivers(d);\n    }\n    this.establishConnectionToUnknownNodes(d);\n  }\n\n  ensureDbExists(dbName: string) {\n    if (!this.databases[dbName]) {\n      this.databases[dbName] = new Database();\n    }\n  }\n\n  forwardToFurtherReceivers(packet: any) {\n    let furtherReceivers: string[] = [];\n    let existingSet = new Set(packet.rcv);\n    existingSet.add(this.ownName);\n    existingSet.add(packet.src);\n    this.otherNames.forEach(function (x) {\n      if (!existingSet.has(x)) {\n        furtherReceivers.push(x);\n      }\n    });\n    packet.rcv.push(...furtherReceivers);\n    let _this = this;\n    furtherReceivers.forEach(function(id) {\n      let index = _this.otherNames.indexOf(id);\n      let conn = _this.others[index];\n      conn.send(packet)\n    });\n  }\n\n  establishConnectionToUnknownNodes(packet: any) {\n    let _this = this;\n    let nameSet = new Set(this.otherNames);\n    nameSet.add(this.ownName);\n    packet.rcv.filter((x: string) => !nameSet.has(x)).forEach(function (x: string) {\n      _this.connectToNode(x);\n    });\n    if (!nameSet.has(packet.src)) {\n      this.connectToNode(packet.src);\n    }\n  }\n\n  add(listDb: string, data: any) {\n    this.put(listDb, this.ownName + this.time, data);\n  }\n\n  put(database: string, id: string, data: any) {\n    var packet = {\n      src: this.ownName,\n      t: this.time++,\n      rcv: this.otherNames,\n      db: database,\n      id: id,\n      dta: data\n    };\n    this.others.forEach(function(x: any) {\n      x.send(packet);\n    })\n    this.handleData(packet);\n  }\n\n  get(database: string, id: string) {\n    if (!this.databases[database]) {\n      return undefined;\n    }\n    return this.databases[database].get(id);\n  }\n\n  on(eventType: string, database: string, action: Function) {\n    this.callbacks[eventType][database] = action;\n  }\n\n}\n\n","import { ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';\nimport { CardBag, CardStash, OtherPlayer } from '../domain/game-field';\nimport { GameFieldStoreService } from '../game-field-store.service';\n\n@Component({\n  selector: 'mrn-other-player',\n  templateUrl: './other-player.component.html',\n  styleUrls: ['./other-player.component.scss']\n})\nexport class OtherPlayerComponent implements OnInit {\n\n  @Input()\n  public me!: OtherPlayer;\n\n  constructor(private field: GameFieldStoreService, private cdr: ChangeDetectorRef) { }\n\n  ngOnInit(): void {\n    this.me.subscribeForUpdate(() => this.cdr.detectChanges());\n  }\n\n  get name(): string {\n    return this.me.name;\n  }\n\n  get id(): string {\n    return this.me.id;\n  }\n\n  get lifes(): number {\n    return this.me.lifes;\n  }\n\n  get table(): CardBag {\n    return this.me.table;\n  }\n\n  get graveyard(): CardStash {\n    return this.me.graveyard;\n  }\n\n  isCurrentPlayer(): boolean {\n    return this.field.gameField.currentPlayerName === this.me.name;\n  }\n\n}\n","<fieldset>\n    <legend [class.turn]=\"isCurrentPlayer()\">{{name}} ({{id}})</legend>\n    {{lifes}} Lebenspunkte<br/>\n    <mrn-card-collection [collection]=\"this.table\" name=\"Ausgelegt\"></mrn-card-collection>\n    <mrn-card-collection [collection]=\"this.graveyard\" name=\"Friedhof\" [collapsed]=\"true\"></mrn-card-collection>\n</fieldset>\n","import { ChangeDetectorRef, Component } from '@angular/core';\nimport { GameField, Card, CardType, OtherPlayer } from './domain/game-field';\nimport { GameFieldStoreService } from './game-field-store.service';\n\ndeclare var Peer: any;\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'mrnOnline';\n\n  public state: string = 'initial';\n\n  constructor(public fieldService: GameFieldStoreService, cdr: ChangeDetectorRef) {\n    fieldService.subscribe(f => f.registerPlayerChangeHandler(() => {console.log('hallo'); cdr.detectChanges()}));\n  }\n\n  createPeer(name: string) {\n    if (window.mrnOnline.gameField) {\n        return;\n    }\n    //var peer = new Peer(undefined, {host: 'localhost', port: 9000, key: 'peerjs', debug: 2});\n    var peer = new Peer(undefined, {});\n    peer.on('error', (err: any) => {\n        console.log(err);\n        alert('' + err);\n    });\n    peer.on('open', (id: string) => {\n        //alert('My peer ID is: ' + id);\n        window.mrnOnline.gameField = new GameField(peer, id, name);\n        this.fieldService.init(window.mrnOnline.gameField);\n        this.state = 'started';\n    });\n    peer.on('connection', (conn: any) => {\n        //alert('Got connection ' + conn);\n        window.mrnOnline.gameField.addOtherPlayer(conn);\n    });\n}\n\nstart() {\n    this.mapDecksAndCards();\n    let def = localStorage.getItem('mrnUserName');\n    let name = prompt('Name', def !== null ? def : undefined);\n    if (name) {\n      localStorage.setItem('mrnUserName', name);\n      this.createPeer(name);\n    }\n}\n\nmapDecksAndCards() {\n  let mi : MrnOnlineDuringInit = {\n    cards: [],\n    deck: [],\n    gameField: undefined\n  };\n  window.mrnOnline = mi as MrnOnline;\n for (let i = 0; i < window.mrnData.cards.length; i++) {\n   let card = window.mrnData.cards[i];\n   window.mrnOnline.cards[card.name] = new CardType(card.name, card.img);\n }\n let d = window.mrnData.decks[0].cards;\n window.mrnOnline.deck = [];\n for (let i = 0; i < d.length; i++) {\n   let card = d[i];\n   window.mrnOnline.deck.push(new Card(window.mrnOnline.cards[card]));\n }\n}\n\njoin() {\n    var other = prompt('ID des Mitspielers');\n    if (other) {\n      window.mrnOnline.gameField.connectToOtherPlayer(other);\n      this.state = 'joined';\n    }\n}\n\nwaitForOthers() {\n  this.state = 'joined';\n}\n\ndice(sides: number) {\n  let n = Math.floor(Math.random() * sides) + 1;\n  this.fieldService.gameField.myself.sendNotification('würfelt ' + n + ' (von ' + sides + ')');\n}\n\nisOwnTurn(): boolean {\n  return this.fieldService.gameField.currentPlayerName === this.fieldService.gameField.myself.name;\n}\n\nget otherPlayers(): OtherPlayer[] {\n  return this.fieldService.gameField.others;\n}\n\n// window.mrnOnline = {};\n// window.mrnOnline.cards = {\n//  respite: new CardType('Respite'),\n//  fog: new CardType('Fog'),\n//  verdantForce: new CardType('Verdant Force'),\n//  terror: new CardType('Terror'),\n//  forest: new CardType('Forest')\n// };\n\n// window.mrnOnline.deck = [\n//  new Card(window.mrnOnline.cards['respite']),\n//  new Card(window.mrnOnline.cards['respite']),\n//  new Card(window.mrnOnline.cards['respite']),\n//  new Card(window.mrnOnline.cards['respite']),\n//  new Card(window.mrnOnline.cards['fog']),\n//  new Card(window.mrnOnline.cards['fog']),\n//  new Card(window.mrnOnline.cards['fog']),\n//  new Card(window.mrnOnline.cards['fog']),\n//  new Card(window.mrnOnline.cards['verdantForce']),\n//  new Card(window.mrnOnline.cards['forest']),\n//  new Card(window.mrnOnline.cards['forest']),\n//  new Card(window.mrnOnline.cards['forest']),\n//  new Card(window.mrnOnline.cards['forest'])\n// ];\n}\n","<ng-container *ngIf=\"state === 'initial'\">\n    <button (click)=\"this.start()\">Start ...</button>\n</ng-container>\n<ng-container *ngIf=\"state === 'started'\">\n    <button (click)=\"this.waitForOthers()\">Neues Spiel starten</button>\n    <button (click)=\"this.join()\">Existierendem Spiel beitreten ...</button>\n</ng-container>\n<ng-container *ngIf=\"state === 'joined'\">\n    <button *ngIf=\"!fieldService.gameField.currentPlayerName\" (click)=\"fieldService.gameField.shuffleStartPlayer()\">Zufälligen Startspieler wählen</button>\n    <button *ngIf=\"isOwnTurn()\" (click)=\"fieldService.gameField.nextPlayer()\">Zug beenden</button>\n    <mrn-self-player></mrn-self-player>\n\n    <button (click)=\"dice(6)\">Würfel 6</button><button (click)=\"dice(10)\">Würfel 10</button><button (click)=\"dice(20)\">Würfel 20</button>\n    \n    <mrn-other-player *ngFor=\"let p of otherPlayers\" [me]=\"p\"></mrn-other-player>\n    \n    <mrn-chat-box></mrn-chat-box>    \n</ng-container>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ChatBoxComponent } from './chat-box/chat-box.component';\nimport { SelfPlayerComponent } from './self-player/self-player.component';\nimport { CardComponent } from './card/card.component';\nimport { OtherPlayerComponent } from './other-player/other-player.component';\nimport { CardCollectionComponent } from './card-collection/card-collection.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ChatBoxComponent,\n    SelfPlayerComponent,\n    CardComponent,\n    OtherPlayerComponent,\n    CardCollectionComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, NextObserver } from 'rxjs';\nimport { GameField } from './domain/game-field';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GameFieldStoreService {\n\n  public store: BehaviorSubject<GameField | undefined> = new BehaviorSubject<GameField | undefined>(undefined);\n\n  public get gameField(): GameField {\n    return this.store.getValue() as GameField;\n  }\n\n  public init(f: GameField): void {\n    this.store.next(f);\n  }\n\n  public subscribe(handler: (f:GameField) => void): void {\n    this.store.subscribe(x => {\n      if (x) {\n        handler(x);\n      }\n    });\n  }\n\n  constructor() { }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Card, GameField } from '../domain/game-field';\nimport { GameFieldStoreService } from '../game-field-store.service';\n\n@Component({\n  selector: 'mrn-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.scss']\n})\nexport class CardComponent implements OnInit {\n\n  @Input()\n  public card!: Card;\n\n  @Input()\n  public act: string = '';\n\n  public large: boolean = false;\n\n  constructor(private field: GameFieldStoreService) { }\n\n  ngOnInit(): void {\n  }\n\n  get gameField(): GameField {\n    return this.field.gameField;\n  }\n\n}\n","<div class=\"dropdown\">\n    <img class=\"card\" [class.tapped]=\"card.tapped\" [class.large]=\"this.large\" (click)=\"this.large = !this.large\" src=\"{{card.img}}\" />\n    <div class=\"dropdown-content\">\n      <a *ngIf=\"act.includes('TA') && !card.tapped\" (click)=\"gameField.tap(card.id)\">tappen</a>\n      <a *ngIf=\"act.includes('UT') && card.tapped\" (click)=\"gameField.untap(card.id)\">enttappen</a>\n      <a *ngIf=\"act.includes('PL')\" (click)=\"gameField.putIntoPlay(card.id)\">ins Spiel bringen</a>\n      <a *ngIf=\"act.includes('PT')\" (click)=\"gameField.putIntoPlayTapped(card.id)\">getappt ins Spiel bringen</a>\n      <a *ngIf=\"act.includes('GR')\" (click)=\"gameField.putToGraveyard(card.id)\">auf Friedhof legen</a>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}